// Copyright (c) 2023, The GoKi Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Package cmd contains the actual command defintions
// for the commands in the GoKi tool.
package cmd

import (
	"goki.dev/goki/config"
	"goki.dev/goki/generate"
	"goki.dev/goki/packman"
	"goki.dev/goki/tools"
)

// App is the main app type that handles
// the logic for the GoKi tool
type App config.Config

// TheApp is the singular instance of [App]
var TheApp = &App{}

// Config returns the app as a config object
func (a *App) Config() *config.Config {
	return (*config.Config)(a)
}

// BuildCmd builds executables for a local
// package for one or more platforms.
func (a *App) BuildCmd() error {
	return packman.Build(a.Config())
}

// ColorgenCmd generates a Go color scheme
// declaration file from a Material Theme
// Builder Android Views XML file.
func (a *App) ColorgenCmd() error {
	return packman.GenerateColorScheme(a.Config())
}

// GenerateCmd generates useful methods,
// variables, and constans for GoKi code.
func (a *App) GenerateCmd() error {
	return generate.Generate(a.Config())
}

// InitCmd initializes the ".goki" directory
// and the configuration file in the current directory
func (a *App) InitCmd() error {
	return tools.Init(a.Config())
}

// InstallCmd installs a local or global GoKi
// package to your device or mobile emulator
func (a *App) InstallCmd() error {
	return packman.Install(a.Config())
}

// LogCmd shows logs generated by your app
// through Android Studio and/or XCode
func (a *App) LogCmd() error {
	return packman.Log(a.Config())
}

// ReleaseCmd releases the project
// by pushing a release with Git
// and releasing it on app stores
// if it is an executable app.
func (a *App) ReleaseCmd() error {
	return packman.Release(a.Config())
}

// VersionCmd updates the version file
// of the project and commits and pushes
// the changes.
func (a *App) VersionCmd() error {
	return packman.UpdateVersion(a.Config())
}
