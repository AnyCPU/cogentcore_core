// Copyright (c) 2023, The GoKi Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package cmd

import (
	"goki.dev/goki/packman"
)

// ColorgenCmd generates a Go color scheme
// declaration file from a Material Theme
// Builder Android Views XML file.
func (a *App) ColorgenCmd() error {
	return packman.GenerateColorScheme(&a.Config)
}

// var colorgenPackage string

// var colorgenComment string

// const defaultColorgenComment = `// ColorSchemes contains the color schemes for this app.
// // The [gi.ColorSchemes] variable should be set to this value
// // in the mainrun function of your app. These color schemes
// // were automatically generated by "goki colorgen"; for more information
// // on color schemes, see https://goki.dev/docs/gi/styling/colors`

// func init() {
// 	rootCmd.AddCommand(colorgenCmd)
// 	colorgenCmd.Flags().StringVarP(&colorgenPackage, "package", "p", "main", "the package in which the color schemes will be used")
// 	colorgenCmd.Flags().StringVarP(&colorgenComment, "comment", "c", defaultColorgenComment, "the comment for the color schemes variable")
// }

// var colorgenCmd = &cobra.Command{
// 	Use:   "colorgen filepath",
// 	Short: "Generate a color scheme declaration file",
// 	Long:  "Generate a Go color scheme declaration file from a Material Theme Builder Android Views XML file",
// 	RunE: func(cmd *cobra.Command, args []string) error {
// 		if len(args) != 1 {
// 			return fmt.Errorf("colorgen: expected 1 argument (filepath), not %d arguments", len(args))
// 		}
// 		return packman.GenerateColorScheme(args[0], "colorschemes.go", colorgenPackage, colorgenComment)
// 	},
// }
