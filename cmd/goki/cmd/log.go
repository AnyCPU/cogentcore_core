package cmd

import (
	"github.com/goki/tools/packman"
	"github.com/spf13/cobra"
	"github.com/spf13/viper"
)

var logTarget string
var logKeep bool
var logAllLevel string

func init() {
	rootCmd.AddCommand(logCmd)
	def := "android"
	// TODO: uncomment this and add similar logic to other commands once ios support is added
	// if runtime.GOOS == "darwin" {
	// 	def = "ios"
	// }
	logCmd.PersistentFlags().StringVarP(&logTarget, "target", "t", def, "the target platform to view the logs for (ios or android)")
	viper.BindPFlag("logTarget", logCmd.PersistentFlags().Lookup("target"))

	logCmd.PersistentFlags().BoolVarP(&logKeep, "keep", "k", false, "whether to keep the previous log messages or clear them")
	viper.BindPFlag("logKeep", logCmd.PersistentFlags().Lookup("keep"))

	logCmd.PersistentFlags().StringVarP(&logAllLevel, "all", "a", "F", "messages not generate from your app equal to or above this log level will be shown")
	viper.BindPFlag("logAll", logCmd.PersistentFlags().Lookup("all"))
}

var logCmd = &cobra.Command{
	Use:   "log",
	Short: "View logs for Android and iOS",
	Long:  `View logs generated by your app through Android Studio and/or XCode`,
	RunE: func(cmd *cobra.Command, args []string) error {
		return packman.Log(logTarget, logKeep, logAllLevel)
	},
}
