// Code generated by "gtigen"; DO NOT EDIT.

package enumgen

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddFunc(&gti.Func{
	Name: "goki.dev/enums/enumgen.Generate",
	Doc:  "Generate generates enum methods, using the\nconfiguration information, loading the packages from the\nconfiguration source directory, and writing the result\nto the configuration output file.\n\nIt is a simple entry point to enumgen that does all\nof the steps; for more specific functionality, create\na new [Generator] with [NewGenerator] and call methods on it.",
	Directives: gti.Directives{
		&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
		&gti.Directive{Tool: "grease", Directive: "cmd", Args: []string{"-root"}},
	},
	Args: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"cfg", &gti.Field{Name: "cfg", Type: "*Config", Doc: "", Directives: gti.Directives{}}},
	}),
	Returns: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"error", &gti.Field{Name: "error", Type: "error", Doc: "", Directives: gti.Directives{}}},
	}),
})
