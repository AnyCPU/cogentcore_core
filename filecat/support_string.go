// Code generated by "stringer -type=Support"; DO NOT EDIT.

package filecat

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _Support_name = "NoSupportSupFolderMultipartTarZipGZipSevenZXzBZipDmgSharTrashAdaBashCCshCSharpDDiffEiffelErlangForthFortranFSharpGoHaskellJavaJavaScriptLuaMakefileMathematicaMatlabObjCOCamlPascalPerlPhpPrologPythonRRubyScalaTclBibtexTexTexinfoTroffHtmlCssMarkdownRtfMSWordOpenTextOpenPresMSPowerpointEBookEPubMSExcelOpenSheetCsvJsonXmlProtobufIniTsvUriColorGoGiPlainTextICalVCalVCardPdfPostscriptGimpGraphVisGifJpegPngSvgTiffPnmPbmPgmPpmXbmXpmVrmlX3dAacFlacMp3OggMidiWavMpegMp4MovOgvWmvAviTrueTypeWebOpenFontSupportN"

var _Support_index = [...]uint16{0, 9, 18, 27, 30, 33, 37, 43, 45, 49, 52, 56, 61, 64, 68, 69, 72, 78, 79, 83, 89, 95, 100, 107, 113, 115, 122, 126, 136, 139, 147, 158, 164, 168, 173, 179, 183, 186, 192, 198, 199, 203, 208, 211, 217, 220, 227, 232, 236, 239, 247, 250, 256, 264, 272, 284, 289, 293, 300, 309, 312, 316, 319, 327, 330, 333, 336, 341, 345, 354, 358, 362, 367, 370, 380, 384, 392, 395, 399, 402, 405, 409, 412, 415, 418, 421, 424, 427, 431, 434, 437, 441, 444, 447, 451, 454, 458, 461, 464, 467, 470, 473, 481, 492, 500}

func (i Support) String() string {
	if i < 0 || i >= Support(len(_Support_index)-1) {
		return "Support(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Support_name[_Support_index[i]:_Support_index[i+1]]
}

func (i *Support) FromString(s string) error {
	for j := 0; j < len(_Support_index)-1; j++ {
		if s == _Support_name[_Support_index[j]:_Support_index[j+1]] {
			*i = Support(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Support")
}
