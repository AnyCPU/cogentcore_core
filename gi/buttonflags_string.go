// Code generated by "stringer -type=ButtonFlags"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ButtonFlagCheckable-25]
	_ = x[ButtonFlagChecked-26]
	_ = x[ButtonFlagMenu-27]
	_ = x[ButtonFlagsN-28]
}

const _ButtonFlags_name = "ButtonFlagCheckableButtonFlagCheckedButtonFlagMenuButtonFlagsN"

var _ButtonFlags_index = [...]uint8{0, 19, 36, 50, 62}

func (i ButtonFlags) String() string {
	i -= 25
	if i < 0 || i >= ButtonFlags(len(_ButtonFlags_index)-1) {
		return "ButtonFlags(" + strconv.FormatInt(int64(i+25), 10) + ")"
	}
	return _ButtonFlags_name[_ButtonFlags_index[i]:_ButtonFlags_index[i+1]]
}

func StringToButtonFlags(s string) (ButtonFlags, error) {
	for i := 0; i < len(_ButtonFlags_index)-1; i++ {
		if s == _ButtonFlags_name[_ButtonFlags_index[i]:_ButtonFlags_index[i+1]] {
			return ButtonFlags(i + 25), nil
		}
	}
	return 0, errors.New("String: " + s + " is not a valid option for type: ButtonFlags")
}
