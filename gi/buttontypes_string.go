// Code generated by "stringer -type=ButtonTypes"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ButtonDefault-0]
	_ = x[ButtonPrimary-1]
	_ = x[ButtonSecondary-2]
	_ = x[ButtonTypesN-3]
}

const _ButtonTypes_name = "ButtonDefaultButtonPrimaryButtonSecondaryButtonTypesN"

var _ButtonTypes_index = [...]uint8{0, 13, 26, 41, 53}

func (i ButtonTypes) String() string {
	if i < 0 || i >= ButtonTypes(len(_ButtonTypes_index)-1) {
		return "ButtonTypes(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ButtonTypes_name[_ButtonTypes_index[i]:_ButtonTypes_index[i+1]]
}

func (i *ButtonTypes) FromString(s string) error {
	for j := 0; j < len(_ButtonTypes_index)-1; j++ {
		if s == _ButtonTypes_name[_ButtonTypes_index[j]:_ButtonTypes_index[j+1]] {
			*i = ButtonTypes(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: ButtonTypes")
}
