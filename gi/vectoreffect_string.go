// Code generated by "stringer -type=VectorEffect"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _VectorEffect_name = "VecEffNoneVecEffNonScalingStrokeVecEffN"

var _VectorEffect_index = [...]uint8{0, 10, 32, 39}

func (i VectorEffect) String() string {
	if i < 0 || i >= VectorEffect(len(_VectorEffect_index)-1) {
		return "VectorEffect(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VectorEffect_name[_VectorEffect_index[i]:_VectorEffect_index[i+1]]
}

func (i *VectorEffect) FromString(s string) error {
	for j := 0; j < len(_VectorEffect_index)-1; j++ {
		if s == _VectorEffect_name[_VectorEffect_index[j]:_VectorEffect_index[j+1]] {
			*i = VectorEffect(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: VectorEffect")
}
