// Code generated by "stringer -type=VpFlags"; DO NOT EDIT.

package gi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VpFlagPopup-25]
	_ = x[VpFlagMenu-26]
	_ = x[VpFlagCompleter-27]
	_ = x[VpFlagCorrector-28]
	_ = x[VpFlagTooltip-29]
	_ = x[VpFlagPopupDestroyAll-30]
	_ = x[VpFlagSVG-31]
	_ = x[VpFlagUpdatingNode-32]
	_ = x[VpFlagNeedsFullRender-33]
	_ = x[VpFlagDoingFullRender-34]
	_ = x[VpFlagPrefSizing-35]
	_ = x[VpFlagsN-36]
}

const _VpFlags_name = "VpFlagPopupVpFlagMenuVpFlagCompleterVpFlagCorrectorVpFlagTooltipVpFlagPopupDestroyAllVpFlagSVGVpFlagUpdatingNodeVpFlagNeedsFullRenderVpFlagDoingFullRenderVpFlagPrefSizingVpFlagsN"

var _VpFlags_index = [...]uint8{0, 11, 21, 36, 51, 64, 85, 94, 112, 133, 154, 170, 178}

func (i VpFlags) String() string {
	i -= 25
	if i < 0 || i >= VpFlags(len(_VpFlags_index)-1) {
		return "VpFlags(" + strconv.FormatInt(int64(i+25), 10) + ")"
	}
	return _VpFlags_name[_VpFlags_index[i]:_VpFlags_index[i+1]]
}

func StringToVpFlags(s string) (VpFlags, error) {
	for i := 0; i < len(_VpFlags_index)-1; i++ {
		if s == _VpFlags_name[_VpFlags_index[i]:_VpFlags_index[i+1]] {
			return VpFlags(i + 25), nil
		}
	}
	return 0, errors.New("String: " + s + " is not a valid option for type: VpFlags")
}
