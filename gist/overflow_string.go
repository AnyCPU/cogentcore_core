// Code generated by "stringer -type=Overflow"; DO NOT EDIT.

package gist

import (
	"errors"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OverflowAuto-0]
	_ = x[OverflowScroll-1]
	_ = x[OverflowVisible-2]
	_ = x[OverflowHidden-3]
	_ = x[OverflowN-4]
}

const _Overflow_name = "OverflowAutoOverflowScrollOverflowVisibleOverflowHiddenOverflowN"

var _Overflow_index = [...]uint8{0, 12, 26, 41, 55, 64}

func (i Overflow) String() string {
	if i < 0 || i >= Overflow(len(_Overflow_index)-1) {
		return "Overflow(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Overflow_name[_Overflow_index[i]:_Overflow_index[i+1]]
}

func (i *Overflow) FromString(s string) error {
	for j := 0; j < len(_Overflow_index)-1; j++ {
		if s == _Overflow_name[_Overflow_index[j]:_Overflow_index[j+1]] {
			*i = Overflow(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Overflow")
}

var _Overflow_descMap = map[Overflow]string{
	0: `OverflowAuto automatically determines if scrollbars should be added to show the overflow. Scrollbars are added only if the actual content size is greater than the currently available size. Typically, an outer-most Layout will scale up and add scrollbars to accommodate the Min needs of its child elements, so if you want to have scrollbars show up on inner elements, they need to have a style setting that restricts their Min size, but also allows them to stretch so they use whatever space they are allocated.`,
	1: `OverflowScroll means add scrollbars when necessary, and is essentially identical to Auto. However, only during Viewport PrefSize call, the actual content size is used -- otherwise it behaves just like Auto.`,
	2: `OverflowVisible makes the overflow visible -- this is generally unsafe and not very feasible and will be ignored as long as possible. Currently it falls back on Auto, but could go to Hidden if that works better overall.`,
	3: `OverflowHidden hides the overflow and doesn&#39;t present scrollbars (supported).`,
	4: ``,
}

func (i Overflow) Desc() string {
	if str, ok := _Overflow_descMap[i]; ok {
		return str
	}
	return "Overflow(" + strconv.FormatInt(int64(i), 10) + ")"
}
