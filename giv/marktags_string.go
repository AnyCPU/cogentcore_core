// Code generated by "stringer -type=MarkTags"; DO NOT EDIT.

package giv

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _MarkTags_name = "NoneOtherErrorLineTableTDLineTableLineHighlightLineNumbersTableLineNumbersBackgroundKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameAttributeNameBuiltinNameBuiltinPseudoNameClassNameConstantNameDecoratorNameEntityNameExceptionNameFunctionNameFunctionMagicNameKeywordNameLabelNameNamespaceNameOperatorNameOtherNamePseudoNamePropertyNameTagNameVariableNameVariableAnonymousNameVariableClassNameVariableGlobalNameVariableInstanceNameVariableMagicLiteralLiteralDateLiteralOtherLiteralStringLiteralStringAffixLiteralStringAtomLiteralStringBacktickLiteralStringBooleanLiteralStringCharLiteralStringDelimiterLiteralStringDocLiteralStringDoubleLiteralStringEscapeLiteralStringHeredocLiteralStringInterpolLiteralStringNameLiteralStringOtherLiteralStringRegexLiteralStringSingleLiteralStringSymbolLiteralNumberLiteralNumberBinLiteralNumberFloatLiteralNumberHexLiteralNumberIntegerLiteralNumberIntegerLongLiteralNumberOctOperatorOperatorWordPunctuationCommentCommentHashbangCommentMultilineCommentSingleCommentSpecialCommentPreprocCommentPreprocFileGenericGenericDeletedGenericEmphGenericErrorGenericHeadingGenericInsertedGenericOutputGenericPromptGenericStrongGenericSubheadingGenericTracebackGenericUnderlineGenericSpellErrTextTextWhitespaceTextSymbolTextPunctuationMarkTagsN"

var _MarkTags_map = map[MarkTags]string{
	-9:   _MarkTags_name[0:4],
	-8:   _MarkTags_name[4:9],
	-7:   _MarkTags_name[9:14],
	-6:   _MarkTags_name[14:25],
	-5:   _MarkTags_name[25:34],
	-4:   _MarkTags_name[34:47],
	-3:   _MarkTags_name[47:63],
	-2:   _MarkTags_name[63:74],
	-1:   _MarkTags_name[74:84],
	1000: _MarkTags_name[84:91],
	1001: _MarkTags_name[91:106],
	1002: _MarkTags_name[106:124],
	1003: _MarkTags_name[124:140],
	1004: _MarkTags_name[140:153],
	1005: _MarkTags_name[153:168],
	1006: _MarkTags_name[168:179],
	2000: _MarkTags_name[179:183],
	2001: _MarkTags_name[183:196],
	2002: _MarkTags_name[196:207],
	2003: _MarkTags_name[207:224],
	2004: _MarkTags_name[224:233],
	2005: _MarkTags_name[233:245],
	2006: _MarkTags_name[245:258],
	2007: _MarkTags_name[258:268],
	2008: _MarkTags_name[268:281],
	2009: _MarkTags_name[281:293],
	2010: _MarkTags_name[293:310],
	2011: _MarkTags_name[310:321],
	2012: _MarkTags_name[321:330],
	2013: _MarkTags_name[330:343],
	2014: _MarkTags_name[343:355],
	2015: _MarkTags_name[355:364],
	2016: _MarkTags_name[364:374],
	2017: _MarkTags_name[374:386],
	2018: _MarkTags_name[386:393],
	2019: _MarkTags_name[393:405],
	2020: _MarkTags_name[405:426],
	2021: _MarkTags_name[426:443],
	2022: _MarkTags_name[443:461],
	2023: _MarkTags_name[461:481],
	2024: _MarkTags_name[481:498],
	3000: _MarkTags_name[498:505],
	3001: _MarkTags_name[505:516],
	3002: _MarkTags_name[516:528],
	3100: _MarkTags_name[528:541],
	3101: _MarkTags_name[541:559],
	3102: _MarkTags_name[559:576],
	3103: _MarkTags_name[576:597],
	3104: _MarkTags_name[597:617],
	3105: _MarkTags_name[617:634],
	3106: _MarkTags_name[634:656],
	3107: _MarkTags_name[656:672],
	3108: _MarkTags_name[672:691],
	3109: _MarkTags_name[691:710],
	3110: _MarkTags_name[710:730],
	3111: _MarkTags_name[730:751],
	3112: _MarkTags_name[751:768],
	3113: _MarkTags_name[768:786],
	3114: _MarkTags_name[786:804],
	3115: _MarkTags_name[804:823],
	3116: _MarkTags_name[823:842],
	3200: _MarkTags_name[842:855],
	3201: _MarkTags_name[855:871],
	3202: _MarkTags_name[871:889],
	3203: _MarkTags_name[889:905],
	3204: _MarkTags_name[905:925],
	3205: _MarkTags_name[925:949],
	3206: _MarkTags_name[949:965],
	4000: _MarkTags_name[965:973],
	4001: _MarkTags_name[973:985],
	5000: _MarkTags_name[985:996],
	6000: _MarkTags_name[996:1003],
	6001: _MarkTags_name[1003:1018],
	6002: _MarkTags_name[1018:1034],
	6003: _MarkTags_name[1034:1047],
	6004: _MarkTags_name[1047:1061],
	6100: _MarkTags_name[1061:1075],
	6101: _MarkTags_name[1075:1093],
	7000: _MarkTags_name[1093:1100],
	7001: _MarkTags_name[1100:1114],
	7002: _MarkTags_name[1114:1125],
	7003: _MarkTags_name[1125:1137],
	7004: _MarkTags_name[1137:1151],
	7005: _MarkTags_name[1151:1166],
	7006: _MarkTags_name[1166:1179],
	7007: _MarkTags_name[1179:1192],
	7008: _MarkTags_name[1192:1205],
	7009: _MarkTags_name[1205:1222],
	7010: _MarkTags_name[1222:1238],
	7011: _MarkTags_name[1238:1254],
	7900: _MarkTags_name[1254:1269],
	8000: _MarkTags_name[1269:1273],
	8001: _MarkTags_name[1273:1287],
	8002: _MarkTags_name[1287:1297],
	8003: _MarkTags_name[1297:1312],
	8004: _MarkTags_name[1312:1321],
}

func (i MarkTags) String() string {
	if str, ok := _MarkTags_map[i]; ok {
		return str
	}
	return "MarkTags(" + strconv.FormatInt(int64(i), 10) + ")"
}
