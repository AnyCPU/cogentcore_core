// Code generated by "goki generate"; DO NOT EDIT.

package desktop

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:      "goki.dev/goosi/driver/desktop.App",
	ShortName: "desktop.App",
	IDName:    "app",
	Doc:       "App is the [goosi.App] implementation for the desktop platform",
	Directives: gti.Directives{
		&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
	},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"GPU", &gti.Field{Name: "GPU", Type: "*goki.dev/vgpu.GPU", LocalType: "*vgpu.GPU", Doc: "GPU is the system GPU used for the app", Directives: gti.Directives{}, Tag: ""}},
		{"ShareWin", &gti.Field{Name: "ShareWin", Type: "*github.com/go-gl/glfw/v3.3/glfw.Window", LocalType: "*glfw.Window", Doc: "ShareWin is a non-visible, always-present window that all windows share gl context with", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"AppMulti", &gti.Field{Name: "AppMulti", Type: "goki.dev/goosi/driver/base.AppMulti", LocalType: "base.AppMulti[*Window]", Doc: "", Directives: gti.Directives{}, Tag: ""}},
	}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:      "goki.dev/goosi/driver/desktop.Window",
	ShortName: "desktop.Window",
	IDName:    "window",
	Doc:       "Window is the implementation of [goosi.Window] for the desktop platform.",
	Directives: gti.Directives{
		&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
	},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Glw", &gti.Field{Name: "Glw", Type: "*github.com/go-gl/glfw/v3.3/glfw.Window", LocalType: "*glfw.Window", Doc: "Glw is the glfw window associated with this window", Directives: gti.Directives{}, Tag: ""}},
		{"ScreenWindow", &gti.Field{Name: "ScreenWindow", Type: "string", LocalType: "string", Doc: "ScreenName is the name of the last known screen this window was on", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"WindowMulti", &gti.Field{Name: "WindowMulti", Type: "goki.dev/goosi/driver/base.WindowMulti", LocalType: "base.WindowMulti[*App, *vdraw.Drawer]", Doc: "", Directives: gti.Directives{}, Tag: ""}},
	}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
