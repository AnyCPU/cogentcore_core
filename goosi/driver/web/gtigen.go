// Code generated by "goki generate ./..."; DO NOT EDIT.

package web

import (
	"goki.dev/goki/gti"
	"goki.dev/goki/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:      "goki.dev/goki/goosi/driver/web.App",
	ShortName: "web.App",
	IDName:    "app",
	Doc:       "App is the [goosi.App] implementation for the web platform",
	Directives: gti.Directives{
		&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
	},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"SystemPlatform", &gti.Field{Name: "SystemPlatform", Type: "goki.dev/goki/goosi.Platforms", LocalType: "goosi.Platforms", Doc: "SystemPlatform is the underlying system SystemPlatform (Android, iOS, etc)", Directives: gti.Directives{}, Tag: ""}},
		{"KeyMods", &gti.Field{Name: "KeyMods", Type: "goki.dev/goki/events/key.Modifiers", LocalType: "key.Modifiers", Doc: "KeyMods are the current key mods", Directives: gti.Directives{}, Tag: ""}},
	}),
	Embeds: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"AppSingle", &gti.Field{Name: "AppSingle", Type: "goki.dev/goki/goosi/driver/base.AppSingle", LocalType: "base.AppSingle[*Drawer, *Window]", Doc: "", Directives: gti.Directives{}, Tag: ""}},
	}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:      "goki.dev/goki/goosi/driver/web.Window",
	ShortName: "web.Window",
	IDName:    "window",
	Doc:       "Window is the implementation of [goosi.Window] for the web platform.",
	Directives: gti.Directives{
		&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
	},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Embeds: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"WindowSingle", &gti.Field{Name: "WindowSingle", Type: "goki.dev/goki/goosi/driver/base.WindowSingle", LocalType: "base.WindowSingle[*App]", Doc: "", Directives: gti.Directives{}, Tag: ""}},
	}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
