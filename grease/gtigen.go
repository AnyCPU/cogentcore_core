// Code generated by "gtigen"; DO NOT EDIT.

package grease

import (
	"goki.dev/goki/gti"
	"goki.dev/goki/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:      "goki.dev/goki/grease.metaConfigFields",
	ShortName: "grease.metaConfigFields",
	IDName:    "meta-config-fields",
	Doc:       "metaConfigFields is the struct used for the implementation\nof [AddMetaConfigFields], and for the usage information for\nmeta configuration options in [Usage].\nNOTE: we could do this through [MetaConfig], but that\ncauses problems with the HelpCmd field capturing\neverything, so it easier to just add through a separate struct.\nTODO: maybe improve the structure of this\nTODO: can we get HelpCmd to display correctly in usage?",
	Directives: gti.Directives{
		&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
	},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Config", &gti.Field{Name: "Config", Type: "string", Doc: "the file name of the config file to load", Directives: gti.Directives{}}},
		{"Help", &gti.Field{Name: "Help", Type: "bool", Doc: "whether to display a help message", Directives: gti.Directives{}}},
		{"HelpCmd", &gti.Field{Name: "HelpCmd", Type: "string", Doc: "the name of the command to display\nhelp information for.", Directives: gti.Directives{}}},
		{"Verbose", &gti.Field{Name: "Verbose", Type: "bool", Doc: "whether to run the command in verbose mode\nand print more information", Directives: gti.Directives{}}},
		{"VeryVerbose", &gti.Field{Name: "VeryVerbose", Type: "bool", Doc: "whether to run the command in very verbose mode\nand print as much information as possible", Directives: gti.Directives{}}},
		{"Quiet", &gti.Field{Name: "Quiet", Type: "bool", Doc: "whether to run the command in quiet mode\nand print less information", Directives: gti.Directives{}}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
