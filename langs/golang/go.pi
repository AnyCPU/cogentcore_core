{
  "Lexer": {
    "Nm": "Lexer",
    "UniqueNm": "Lexer",
    "Props": null,
    "Kids": [
      {
        "n": 33,
        "type": "lex.Rule",
        "name": "InCommentMulti",
        "type": "lex.Rule",
        "name": "InStrBacktick",
        "type": "lex.Rule",
        "name": "StartCommentMulti",
        "type": "lex.Rule",
        "name": "LitStrBacktick",
        "type": "lex.Rule",
        "name": "CommentLine",
        "type": "lex.Rule",
        "name": "SkipWhite",
        "type": "lex.Rule",
        "name": "Letter",
        "type": "lex.Rule",
        "name": "Number",
        "type": "lex.Rule",
        "name": "Dot",
        "type": "lex.Rule",
        "name": "LitStrSingle",
        "type": "lex.Rule",
        "name": "LitStrDouble",
        "type": "lex.Rule",
        "name": "LParen",
        "type": "lex.Rule",
        "name": "RParen",
        "type": "lex.Rule",
        "name": "LBrack",
        "type": "lex.Rule",
        "name": "RBrack",
        "type": "lex.Rule",
        "name": "LBrace",
        "type": "lex.Rule",
        "name": "RBrace",
        "type": "lex.Rule",
        "name": "Comma",
        "type": "lex.Rule",
        "name": "Semi",
        "type": "lex.Rule",
        "name": "Colon",
        "type": "lex.Rule",
        "name": "Plus",
        "type": "lex.Rule",
        "name": "Minus",
        "type": "lex.Rule",
        "name": "Mult",
        "type": "lex.Rule",
        "name": "Div",
        "type": "lex.Rule",
        "name": "Rem",
        "type": "lex.Rule",
        "name": "Xor",
        "type": "lex.Rule",
        "name": "Rangle",
        "type": "lex.Rule",
        "name": "Langle",
        "type": "lex.Rule",
        "name": "Equals",
        "type": "lex.Rule",
        "name": "Not",
        "type": "lex.Rule",
        "name": "And",
        "type": "lex.Rule",
        "name": "Or",
        "type": "lex.Rule",
        "name": "AnyText"
      },
      {
        "Nm": "InCommentMulti",
        "UniqueNm": "InCommentMulti",
        "Props": null,
        "Kids": [
          {
            "n": 3,
            "type": "lex.Rule",
            "name": "EndMulti",
            "type": "lex.Rule",
            "name": "StartEmbededMulti",
            "type": "lex.Rule",
            "name": "Comment"
          },
          {
            "Nm": "EndMulti",
            "UniqueNm": "EndMulti",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "CommentMultiline",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "*/",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "PopState",
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "StartEmbededMulti",
            "UniqueNm": "StartEmbededMulti",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "CommentMultiline",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "/*",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "PushState",
              "Next"
            ],
            "Until": "",
            "PushState": "CommentMulti",
            "NameMap": false
          },
          {
            "Nm": "Comment",
            "UniqueNm": "Comment",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "CommentMultiline",
            "Match": "AnyRune",
            "Pos": "AnyPos",
            "String": "",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "all CurState must be at top!  any multi-line requires state",
        "Token": "CommentMultiline",
        "Match": "CurState",
        "Pos": "AnyPos",
        "String": "CommentMulti",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "InStrBacktick",
        "UniqueNm": "InStrBacktick",
        "Props": null,
        "Kids": [
          {
            "n": 3,
            "type": "lex.Rule",
            "name": "QuotedStrBacktick",
            "type": "lex.Rule",
            "name": "EndStrBacktick",
            "type": "lex.Rule",
            "name": "StrBacktick"
          },
          {
            "Nm": "QuotedStrBacktick",
            "UniqueNm": "QuotedStrBacktick",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "LitStrBacktick",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "\\`",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "EndStrBacktick",
            "UniqueNm": "EndStrBacktick",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "LitStrBacktick",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "`",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "PopState",
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "StrBacktick",
            "UniqueNm": "StrBacktick",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "LitStrBacktick",
            "Match": "AnyRune",
            "Pos": "AnyPos",
            "String": "",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "curstate at start -- multiline requires state",
        "Token": "LitStrBacktick",
        "Match": "CurState",
        "Pos": "AnyPos",
        "String": "StrBacktick",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": null,
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "StartCommentMulti",
        "UniqueNm": "StartCommentMulti",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "CommentMultiline",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "/*",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "PushState",
          "Next"
        ],
        "Until": "",
        "PushState": "CommentMulti",
        "NameMap": false
      },
      {
        "Nm": "LitStrBacktick",
        "UniqueNm": "LitStrBacktick",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "LitStrBacktick",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "`",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "PushState",
          "Next"
        ],
        "Until": "",
        "PushState": "StrBacktick",
        "NameMap": false
      },
      {
        "Nm": "CommentLine",
        "UniqueNm": "CommentLine",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "Comment",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "//",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "EOL"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "SkipWhite",
        "UniqueNm": "SkipWhite",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "TextWhitespace",
        "Match": "WhiteSpace",
        "Pos": "AnyPos",
        "String": "",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Letter",
        "UniqueNm": "Letter",
        "Props": null,
        "Kids": [
          {
            "n": 4,
            "type": "lex.Rule",
            "name": "Keyword",
            "type": "lex.Rule",
            "name": "Type",
            "type": "lex.Rule",
            "name": "Builtins",
            "type": "lex.Rule",
            "name": "Name"
          },
          {
            "Nm": "Keyword",
            "UniqueNm": "Keyword",
            "Props": null,
            "Kids": [
              {
                "n": 27,
                "type": "lex.Rule",
                "name": "break",
                "type": "lex.Rule",
                "name": "case",
                "type": "lex.Rule",
                "name": "chan",
                "type": "lex.Rule",
                "name": "const",
                "type": "lex.Rule",
                "name": "continue",
                "type": "lex.Rule",
                "name": "default",
                "type": "lex.Rule",
                "name": "defer",
                "type": "lex.Rule",
                "name": "else",
                "type": "lex.Rule",
                "name": "fallthrough",
                "type": "lex.Rule",
                "name": "for",
                "type": "lex.Rule",
                "name": "func",
                "type": "lex.Rule",
                "name": "go",
                "type": "lex.Rule",
                "name": "goto",
                "type": "lex.Rule",
                "name": "if",
                "type": "lex.Rule",
                "name": "import",
                "type": "lex.Rule",
                "name": "interface",
                "type": "lex.Rule",
                "name": "map",
                "type": "lex.Rule",
                "name": "make",
                "type": "lex.Rule",
                "name": "new",
                "type": "lex.Rule",
                "name": "package",
                "type": "lex.Rule",
                "name": "range",
                "type": "lex.Rule",
                "name": "return",
                "type": "lex.Rule",
                "name": "select",
                "type": "lex.Rule",
                "name": "struct",
                "type": "lex.Rule",
                "name": "switch",
                "type": "lex.Rule",
                "name": "type",
                "type": "lex.Rule",
                "name": "var"
              },
              {
                "Nm": "break",
                "UniqueNm": "break",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "break",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "case",
                "UniqueNm": "case",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "case",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "chan",
                "UniqueNm": "chan",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "chan",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "const",
                "UniqueNm": "const",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "const",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "continue",
                "UniqueNm": "continue",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "continue",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "default",
                "UniqueNm": "default",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "default",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "defer",
                "UniqueNm": "defer",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "defer",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "else",
                "UniqueNm": "else",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "else",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "fallthrough",
                "UniqueNm": "fallthrough",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "fallthrough",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "for",
                "UniqueNm": "for",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "for",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "func",
                "UniqueNm": "func",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "func",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "go",
                "UniqueNm": "go",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "go",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "goto",
                "UniqueNm": "goto",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "goto",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "if",
                "UniqueNm": "if",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "if",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "import",
                "UniqueNm": "import",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "import",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "interface",
                "UniqueNm": "interface",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "interface",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "map",
                "UniqueNm": "map",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "map",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "make",
                "UniqueNm": "make",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "make",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "new",
                "UniqueNm": "new",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "new",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "package",
                "UniqueNm": "package",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "package",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "range",
                "UniqueNm": "range",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "range",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "return",
                "UniqueNm": "return",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "return",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "select",
                "UniqueNm": "select",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "select",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "struct",
                "UniqueNm": "struct",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "struct",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "switch",
                "UniqueNm": "switch",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "switch",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "type",
                "UniqueNm": "type",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "type",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "var",
                "UniqueNm": "var",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "Keyword",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "var",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              }
            ],
            "Off": false,
            "Desc": "this group should contain all reserved keywords",
            "Token": "None",
            "Match": "Letter",
            "Pos": "AnyPos",
            "String": "",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": null,
            "Until": "",
            "PushState": "",
            "NameMap": true
          },
          {
            "Nm": "Type",
            "UniqueNm": "Type",
            "Props": null,
            "Kids": [
              {
                "n": 20,
                "type": "lex.Rule",
                "name": "bool",
                "type": "lex.Rule",
                "name": "byte",
                "type": "lex.Rule",
                "name": "complex64",
                "type": "lex.Rule",
                "name": "complex128",
                "type": "lex.Rule",
                "name": "error",
                "type": "lex.Rule",
                "name": "float32",
                "type": "lex.Rule",
                "name": "float64",
                "type": "lex.Rule",
                "name": "int",
                "type": "lex.Rule",
                "name": "int8",
                "type": "lex.Rule",
                "name": "int16",
                "type": "lex.Rule",
                "name": "int32",
                "type": "lex.Rule",
                "name": "int64",
                "type": "lex.Rule",
                "name": "rune",
                "type": "lex.Rule",
                "name": "string",
                "type": "lex.Rule",
                "name": "uint",
                "type": "lex.Rule",
                "name": "uint8",
                "type": "lex.Rule",
                "name": "uint16",
                "type": "lex.Rule",
                "name": "uint32",
                "type": "lex.Rule",
                "name": "uint64",
                "type": "lex.Rule",
                "name": "uintptr"
              },
              {
                "Nm": "bool",
                "UniqueNm": "bool",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "bool",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "byte",
                "UniqueNm": "byte",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "byte",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "complex64",
                "UniqueNm": "complex64",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "complex64",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "complex128",
                "UniqueNm": "complex128",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "complex128",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "error",
                "UniqueNm": "error",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "error",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "float32",
                "UniqueNm": "float32",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "float32",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "float64",
                "UniqueNm": "float64",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "float64",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "int",
                "UniqueNm": "int",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "int",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "int8",
                "UniqueNm": "int8",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "int8",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "int16",
                "UniqueNm": "int16",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "int16",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "int32",
                "UniqueNm": "int32",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "int32",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "int64",
                "UniqueNm": "int64",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "int64",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "rune",
                "UniqueNm": "rune",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "rune",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "string",
                "UniqueNm": "string",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "string",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "uint",
                "UniqueNm": "uint",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "uint",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "uint8",
                "UniqueNm": "uint8",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "uint8",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "uint16",
                "UniqueNm": "uint16",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "uint16",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "uint32",
                "UniqueNm": "uint32",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "uint32",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "uint64",
                "UniqueNm": "uint64",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "uint64",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "uintptr",
                "UniqueNm": "uintptr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "KeywordType",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "uintptr",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              }
            ],
            "Off": false,
            "Desc": "this group should contain all basic types, and no types that are not built into the language",
            "Token": "None",
            "Match": "Letter",
            "Pos": "AnyPos",
            "String": "",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": null,
            "Until": "",
            "PushState": "",
            "NameMap": true
          },
          {
            "Nm": "Builtins",
            "UniqueNm": "Builtins",
            "Props": null,
            "Kids": [
              {
                "n": 17,
                "type": "lex.Rule",
                "name": "append",
                "type": "lex.Rule",
                "name": "cap",
                "type": "lex.Rule",
                "name": "close",
                "type": "lex.Rule",
                "name": "complex",
                "type": "lex.Rule",
                "name": "copy",
                "type": "lex.Rule",
                "name": "delete",
                "type": "lex.Rule",
                "name": "imag",
                "type": "lex.Rule",
                "name": "len",
                "type": "lex.Rule",
                "name": "panic",
                "type": "lex.Rule",
                "name": "print",
                "type": "lex.Rule",
                "name": "println",
                "type": "lex.Rule",
                "name": "real",
                "type": "lex.Rule",
                "name": "recover",
                "type": "lex.Rule",
                "name": "true",
                "type": "lex.Rule",
                "name": "false",
                "type": "lex.Rule",
                "name": "iota",
                "type": "lex.Rule",
                "name": "nil"
              },
              {
                "Nm": "append",
                "UniqueNm": "append",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "append",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "cap",
                "UniqueNm": "cap",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "cap",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "close",
                "UniqueNm": "close",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "close",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "complex",
                "UniqueNm": "complex",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "complex",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "copy",
                "UniqueNm": "copy",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "copy",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "delete",
                "UniqueNm": "delete",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "delete",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "imag",
                "UniqueNm": "imag",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "imag",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "len",
                "UniqueNm": "len",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "len",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "panic",
                "UniqueNm": "panic",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "panic",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "print",
                "UniqueNm": "print",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "print",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "println",
                "UniqueNm": "println",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "println",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "real",
                "UniqueNm": "real",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "real",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "recover",
                "UniqueNm": "recover",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "recover",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "true",
                "UniqueNm": "true",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "true",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "false",
                "UniqueNm": "false",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "false",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "iota",
                "UniqueNm": "iota",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "iota",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "nil",
                "UniqueNm": "nil",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "NameBuiltin",
                "Match": "StrName",
                "Pos": "AnyPos",
                "String": "nil",
                "Offset": 0,
                "SizeAdj": 0,
                "Acts": [
                  "Name"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Token": "None",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": null,
            "Until": "",
            "PushState": "",
            "NameMap": true
          },
          {
            "Nm": "Name",
            "UniqueNm": "Name",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "Name",
            "Match": "Letter",
            "Pos": "AnyPos",
            "String": "",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Name"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "Letter",
        "Pos": "AnyPos",
        "String": "",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": null,
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Number",
        "UniqueNm": "Number",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "LitNum",
        "Match": "Digit",
        "Pos": "AnyPos",
        "String": "",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Number"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Dot",
        "UniqueNm": "Dot",
        "Props": null,
        "Kids": [
          {
            "n": 3,
            "type": "lex.Rule",
            "name": "NextNum",
            "type": "lex.Rule",
            "name": "NextDot",
            "type": "lex.Rule",
            "name": "Period"
          },
          {
            "Nm": "NextNum",
            "UniqueNm": "NextNum",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "lookahead for number",
            "Token": "LitNum",
            "Match": "Digit",
            "Pos": "AnyPos",
            "String": "",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Number"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "NextDot",
            "UniqueNm": "NextDot",
            "Props": null,
            "Kids": [
              {
                "n": 1,
                "type": "lex.Rule",
                "name": "Ellipsis"
              },
              {
                "Nm": "Ellipsis",
                "UniqueNm": "Ellipsis",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "OpListEllipsis",
                "Match": "String",
                "Pos": "AnyPos",
                "String": ".",
                "Offset": 2,
                "SizeAdj": 0,
                "Acts": [
                  "Next"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              }
            ],
            "Off": false,
            "Desc": "lookahead for another dot -- ellipses",
            "Token": "None",
            "Match": "String",
            "Pos": "AnyPos",
            "String": ".",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Period",
            "UniqueNm": "Period",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "default is just a plain .",
            "Token": "PunctSepPeriod",
            "Match": "String",
            "Pos": "AnyPos",
            "String": ".",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": ".",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": null,
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "LitStrSingle",
        "UniqueNm": "LitStrSingle",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "LitStrSingle",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "'",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "QuotedRaw"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "LitStrDouble",
        "UniqueNm": "LitStrDouble",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "LitStrDouble",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "\"",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "QuotedRaw"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "LParen",
        "UniqueNm": "LParen",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "PunctGpLParen",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "(",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "RParen",
        "UniqueNm": "RParen",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "PunctGpRParen",
        "Match": "String",
        "Pos": "AnyPos",
        "String": ")",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "LBrack",
        "UniqueNm": "LBrack",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "PunctGpLBrack",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "[",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "RBrack",
        "UniqueNm": "RBrack",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "PunctGpRBrack",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "]",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "LBrace",
        "UniqueNm": "LBrace",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "PunctGpLBrace",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "{",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "RBrace",
        "UniqueNm": "RBrace",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "PunctGpRBrace",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "}",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Comma",
        "UniqueNm": "Comma",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "PunctSepComma",
        "Match": "String",
        "Pos": "AnyPos",
        "String": ",",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Semi",
        "UniqueNm": "Semi",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "",
        "Token": "PunctSepSemicolon",
        "Match": "String",
        "Pos": "AnyPos",
        "String": ";",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Colon",
        "UniqueNm": "Colon",
        "Props": null,
        "Kids": [
          {
            "n": 2,
            "type": "lex.Rule",
            "name": "Define",
            "type": "lex.Rule",
            "name": "Colon"
          },
          {
            "Nm": "Define",
            "UniqueNm": "Define",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpAsgnDefine",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Colon",
            "UniqueNm": "Colon",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "PunctSepColon",
            "Match": "String",
            "Pos": "AnyPos",
            "String": ":",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": ":",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Plus",
        "UniqueNm": "Plus",
        "Props": null,
        "Kids": [
          {
            "n": 3,
            "type": "lex.Rule",
            "name": "AsgnAdd",
            "type": "lex.Rule",
            "name": "AsgnInc",
            "type": "lex.Rule",
            "name": "Add"
          },
          {
            "Nm": "AsgnAdd",
            "UniqueNm": "AsgnAdd",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathAsgnAdd",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "AsgnInc",
            "UniqueNm": "AsgnInc",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpAsgnInc",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "+",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Add",
            "UniqueNm": "Add",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathAdd",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "+",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "+",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Minus",
        "UniqueNm": "Minus",
        "Props": null,
        "Kids": [
          {
            "n": 3,
            "type": "lex.Rule",
            "name": "AsgnSub",
            "type": "lex.Rule",
            "name": "AsgnDec",
            "type": "lex.Rule",
            "name": "Sub"
          },
          {
            "Nm": "AsgnSub",
            "UniqueNm": "AsgnSub",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathAsgnSub",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "AsgnDec",
            "UniqueNm": "AsgnDec",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpAsgnDec",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "-",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Sub",
            "UniqueNm": "Sub",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathSub",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "-",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "-",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Mult",
        "UniqueNm": "Mult",
        "Props": null,
        "Kids": [
          {
            "n": 2,
            "type": "lex.Rule",
            "name": "AsgnMul",
            "type": "lex.Rule",
            "name": "Mult"
          },
          {
            "Nm": "AsgnMul",
            "UniqueNm": "AsgnMul",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathAsgnMul",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Mult",
            "UniqueNm": "Mult",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathMul",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "*",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "*",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Div",
        "UniqueNm": "Div",
        "Props": null,
        "Kids": [
          {
            "n": 2,
            "type": "lex.Rule",
            "name": "AsgnDiv",
            "type": "lex.Rule",
            "name": "Div"
          },
          {
            "Nm": "AsgnDiv",
            "UniqueNm": "AsgnDiv",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathAsgnDiv",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Div",
            "UniqueNm": "Div",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathDiv",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "/",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "comments already matched above..",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "/",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Rem",
        "UniqueNm": "Rem",
        "Props": null,
        "Kids": [
          {
            "n": 2,
            "type": "lex.Rule",
            "name": "AsgnRem",
            "type": "lex.Rule",
            "name": "Rem"
          },
          {
            "Nm": "AsgnRem",
            "UniqueNm": "AsgnRem",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathAsgnRem",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Rem",
            "UniqueNm": "Rem",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpMathRem",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "%",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "%",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Xor",
        "UniqueNm": "Xor",
        "Props": null,
        "Kids": [
          {
            "n": 2,
            "type": "lex.Rule",
            "name": "AsgnXor",
            "type": "lex.Rule",
            "name": "Xor"
          },
          {
            "Nm": "AsgnXor",
            "UniqueNm": "AsgnXor",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpBitAsgnXor",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Xor",
            "UniqueNm": "Xor",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpBitXor",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "^",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "^",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Rangle",
        "UniqueNm": "Rangle",
        "Props": null,
        "Kids": [
          {
            "n": 3,
            "type": "lex.Rule",
            "name": "GtEq",
            "type": "lex.Rule",
            "name": "ShiftRight",
            "type": "lex.Rule",
            "name": "Greater"
          },
          {
            "Nm": "GtEq",
            "UniqueNm": "GtEq",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpRelGtEq",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "ShiftRight",
            "UniqueNm": "ShiftRight",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "lex.Rule",
                "name": "AsgnShiftRight",
                "type": "lex.Rule",
                "name": "ShiftRight"
              },
              {
                "Nm": "AsgnShiftRight",
                "UniqueNm": "AsgnShiftRight",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "OpBitAsgnShiftRight",
                "Match": "String",
                "Pos": "AnyPos",
                "String": "=",
                "Offset": 2,
                "SizeAdj": 0,
                "Acts": [
                  "Next"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "ShiftRight",
                "UniqueNm": "ShiftRight",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "OpBitShiftRight",
                "Match": "String",
                "Pos": "AnyPos",
                "String": "\u003e",
                "Offset": 1,
                "SizeAdj": 0,
                "Acts": [
                  "Next"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Token": "None",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "\u003e",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Greater",
            "UniqueNm": "Greater",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpRelGreater",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "\u003e",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "\u003e",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Langle",
        "UniqueNm": "Langle",
        "Props": null,
        "Kids": [
          {
            "n": 4,
            "type": "lex.Rule",
            "name": "LtEq",
            "type": "lex.Rule",
            "name": "AsgnArrow",
            "type": "lex.Rule",
            "name": "ShiftLeft",
            "type": "lex.Rule",
            "name": "Less"
          },
          {
            "Nm": "LtEq",
            "UniqueNm": "LtEq",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpRelLtEq",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "AsgnArrow",
            "UniqueNm": "AsgnArrow",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpAsgnArrow",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "-",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "ShiftLeft",
            "UniqueNm": "ShiftLeft",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "lex.Rule",
                "name": "AsgnShiftLeft",
                "type": "lex.Rule",
                "name": "ShiftLeft"
              },
              {
                "Nm": "AsgnShiftLeft",
                "UniqueNm": "AsgnShiftLeft",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "OpBitAsgnShiftLeft",
                "Match": "String",
                "Pos": "AnyPos",
                "String": "=",
                "Offset": 2,
                "SizeAdj": 0,
                "Acts": [
                  "Next"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "ShiftLeft",
                "UniqueNm": "ShiftLeft",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "OpBitShiftLeft",
                "Match": "String",
                "Pos": "AnyPos",
                "String": "\u003c",
                "Offset": 1,
                "SizeAdj": 0,
                "Acts": [
                  "Next"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Token": "None",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "\u003c",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Less",
            "UniqueNm": "Less",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpRelLess",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "\u003c",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "\u003c",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Equals",
        "UniqueNm": "Equals",
        "Props": null,
        "Kids": [
          {
            "n": 2,
            "type": "lex.Rule",
            "name": "Equality",
            "type": "lex.Rule",
            "name": "Asgn"
          },
          {
            "Nm": "Equality",
            "UniqueNm": "Equality",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpRelEqual",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Asgn",
            "UniqueNm": "Asgn",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpAsgnAssign",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "=",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Not",
        "UniqueNm": "Not",
        "Props": null,
        "Kids": [
          {
            "n": 2,
            "type": "lex.Rule",
            "name": "NotEqual",
            "type": "lex.Rule",
            "name": "Not"
          },
          {
            "Nm": "NotEqual",
            "UniqueNm": "NotEqual",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpRelNotEqual",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "Not",
            "UniqueNm": "Not",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpLogNot",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "!",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "!",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "And",
        "UniqueNm": "And",
        "Props": null,
        "Kids": [
          {
            "n": 4,
            "type": "lex.Rule",
            "name": "AsgnAnd",
            "type": "lex.Rule",
            "name": "AndNot",
            "type": "lex.Rule",
            "name": "LogAnd",
            "type": "lex.Rule",
            "name": "BitAnd"
          },
          {
            "Nm": "AsgnAnd",
            "UniqueNm": "AsgnAnd",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpBitAsgnAnd",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "AndNot",
            "UniqueNm": "AndNot",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "lex.Rule",
                "name": "AsgnAndNot",
                "type": "lex.Rule",
                "name": "AndNot"
              },
              {
                "Nm": "AsgnAndNot",
                "UniqueNm": "AsgnAndNot",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "OpBitAsgnAndNot",
                "Match": "String",
                "Pos": "AnyPos",
                "String": "=",
                "Offset": 2,
                "SizeAdj": 0,
                "Acts": [
                  "Next"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              },
              {
                "Nm": "AndNot",
                "UniqueNm": "AndNot",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Token": "OpBitAndNot",
                "Match": "String",
                "Pos": "AnyPos",
                "String": "^",
                "Offset": 1,
                "SizeAdj": 0,
                "Acts": [
                  "Next"
                ],
                "Until": "",
                "PushState": "",
                "NameMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Token": "None",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "^",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "LogAnd",
            "UniqueNm": "LogAnd",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpLogAnd",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "\u0026",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "BitAnd",
            "UniqueNm": "BitAnd",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpBitAnd",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "\u0026",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "\u0026",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "Or",
        "UniqueNm": "Or",
        "Props": null,
        "Kids": [
          {
            "n": 3,
            "type": "lex.Rule",
            "name": "AsgnOr",
            "type": "lex.Rule",
            "name": "LogOr",
            "type": "lex.Rule",
            "name": "BitOr"
          },
          {
            "Nm": "AsgnOr",
            "UniqueNm": "AsgnOr",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpBitAsgnOr",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "=",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "LogOr",
            "UniqueNm": "LogOr",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpLogOr",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "|",
            "Offset": 1,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          },
          {
            "Nm": "BitOr",
            "UniqueNm": "BitOr",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Token": "OpBitOr",
            "Match": "String",
            "Pos": "AnyPos",
            "String": "|",
            "Offset": 0,
            "SizeAdj": 0,
            "Acts": [
              "Next"
            ],
            "Until": "",
            "PushState": "",
            "NameMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Token": "None",
        "Match": "String",
        "Pos": "AnyPos",
        "String": "|",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [],
        "Until": "",
        "PushState": "",
        "NameMap": false
      },
      {
        "Nm": "AnyText",
        "UniqueNm": "AnyText",
        "Props": null,
        "Kids": null,
        "Off": false,
        "Desc": "all lexers should end with a default AnyRune rule so lexing is robust",
        "Token": "Text",
        "Match": "AnyRune",
        "Pos": "AnyPos",
        "String": "",
        "Offset": 0,
        "SizeAdj": 0,
        "Acts": [
          "Next"
        ],
        "Until": "",
        "PushState": "",
        "NameMap": false
      }
    ],
    "Off": false,
    "Desc": "",
    "Token": "None",
    "Match": "String",
    "Pos": "AnyPos",
    "String": "",
    "Offset": 0,
    "SizeAdj": 0,
    "Acts": null,
    "Until": "",
    "PushState": "",
    "NameMap": false
  },
  "PassTwo": {
    "DoEos": true,
    "Eol": false,
    "Semi": true,
    "Backslash": false,
    "RBraceEos": true,
    "EolToks": [
      {
        "Tok": "Name",
        "Key": "",
        "Depth": 0
      },
      {
        "Tok": "Literal",
        "Key": "",
        "Depth": 0
      },
      {
        "Tok": "OpAsgnInc",
        "Key": "",
        "Depth": 0
      },
      {
        "Tok": "OpAsgnDec",
        "Key": "",
        "Depth": 0
      },
      {
        "Tok": "PunctGpRParen",
        "Key": "",
        "Depth": 0
      },
      {
        "Tok": "PunctGpRBrack",
        "Key": "",
        "Depth": 0
      },
      {
        "Tok": "Keyword",
        "Key": "break",
        "Depth": 0
      },
      {
        "Tok": "Keyword",
        "Key": "continue",
        "Depth": 0
      },
      {
        "Tok": "Keyword",
        "Key": "fallthrough",
        "Depth": 0
      },
      {
        "Tok": "Keyword",
        "Key": "return",
        "Depth": 0
      },
      {
        "Tok": "KeywordType",
        "Key": "",
        "Depth": 0
      },
      {
        "Tok": "PunctSepColon",
        "Key": "",
        "Depth": 0
      }
    ]
  },
  "Parser": {
    "Nm": "Parser",
    "UniqueNm": "Parser",
    "Props": null,
    "Kids": [
      {
        "n": 7,
        "type": "parse.Rule",
        "name": "File",
        "type": "parse.Rule",
        "name": "ExprRules",
        "type": "parse.Rule",
        "name": "TypeRules",
        "type": "parse.Rule",
        "name": "FuncRules",
        "type": "parse.Rule",
        "name": "StmtRules",
        "type": "parse.Rule",
        "name": "ImportRules",
        "type": "parse.Rule",
        "name": "DeclRules"
      },
      {
        "Nm": "File",
        "UniqueNm": "File",
        "Props": null,
        "Kids": [
          {
            "n": 7,
            "type": "parse.Rule",
            "name": "PackageSpec",
            "type": "parse.Rule",
            "name": "Imports",
            "type": "parse.Rule",
            "name": "Consts",
            "type": "parse.Rule",
            "name": "Types",
            "type": "parse.Rule",
            "name": "Vars",
            "type": "parse.Rule",
            "name": "Funcs",
            "type": "parse.Rule",
            "name": "Stmts"
          },
          {
            "Nm": "PackageSpec",
            "UniqueNm": "PackageSpec",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "'key:package' Name 'EOS'",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": [
              {
                "RunIdx": -1,
                "Act": "PushNewScope",
                "Path": "Name",
                "Tok": "NamePackage",
                "FmTok": "None"
              },
              {
                "RunIdx": -1,
                "Act": "ChgToken",
                "Path": "Name",
                "Tok": "NamePackage",
                "FmTok": "None"
              }
            ],
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Imports",
            "UniqueNm": "Imports",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "'key:import' ImportN 'EOS'",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": [],
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Consts",
            "UniqueNm": "Consts",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "same as ConstDecl",
            "Rule": "'key:const' ConstDeclN 'EOS'",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Types",
            "UniqueNm": "Types",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "same as TypeDecl",
            "Rule": "'key:type' TypeDeclN 'EOS'",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Vars",
            "UniqueNm": "Vars",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "same as VarDecl",
            "Rule": "'key:var' VarDeclN 'EOS'",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Funcs",
            "UniqueNm": "Funcs",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "@FunDecl 'EOS'",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Stmts",
            "UniqueNm": "Stmts",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "this allows direct parsing of anything -- for one-line parsing",
            "Rule": "Stmt 'EOS'",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          }
        ],
        "Off": false,
        "Desc": "only rules in this first group are used as top-level rules -- all others must be referenced from here",
        "Rule": "",
        "StackMatch": "",
        "Ast": "NoAst",
        "Acts": null,
        "OptTokMap": false,
        "FirstTokMap": false
      },
      {
        "Nm": "ExprRules",
        "UniqueNm": "ExprRules",
        "Props": null,
        "Kids": [
          {
            "n": 18,
            "type": "parse.Rule",
            "name": "FullName",
            "type": "parse.Rule",
            "name": "NameList",
            "type": "parse.Rule",
            "name": "ExprList",
            "type": "parse.Rule",
            "name": "Expr",
            "type": "parse.Rule",
            "name": "UnaryExpr",
            "type": "parse.Rule",
            "name": "BinaryExpr",
            "type": "parse.Rule",
            "name": "PrimaryExpr",
            "type": "parse.Rule",
            "name": "LiteralType",
            "type": "parse.Rule",
            "name": "LiteralValue",
            "type": "parse.Rule",
            "name": "ElementList",
            "type": "parse.Rule",
            "name": "Key",
            "type": "parse.Rule",
            "name": "RecvType",
            "type": "parse.Rule",
            "name": "Selectors",
            "type": "parse.Rule",
            "name": "SubSlice",
            "type": "parse.Rule",
            "name": "SliceExpr",
            "type": "parse.Rule",
            "name": "SliceIdxs",
            "type": "parse.Rule",
            "name": "ArgsExpr",
            "type": "parse.Rule",
            "name": "ArgsList"
          },
          {
            "Nm": "FullName",
            "UniqueNm": "FullName",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "QualName",
                "type": "parse.Rule",
                "name": "Name"
              },
              {
                "Nm": "QualName",
                "UniqueNm": "QualName",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "package-qualified name",
                "Rule": "'Name' '.' 'Name'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "Name",
                "UniqueNm": "Name",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "just a name without package scope",
                "Rule": "'Name'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "name that is either a full package-qualified name or short plain name",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "NameList",
            "UniqueNm": "NameList",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "NameListEls",
                "type": "parse.Rule",
                "name": "NameListEl"
              },
              {
                "Nm": "NameListEls",
                "UniqueNm": "NameListEls",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "@Name ',' NameList",
                "StackMatch": "",
                "Ast": "AnchorFirstAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "NameListEl",
                "UniqueNm": "NameListEl",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'Name'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "one or more plain names, separated by , -- for var names",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "ExprList",
            "UniqueNm": "ExprList",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "ExprListEls",
                "type": "parse.Rule",
                "name": "ExprListEl"
              },
              {
                "Nm": "ExprListEls",
                "UniqueNm": "ExprListEls",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr ',' ExprList",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ExprListEl",
                "UniqueNm": "ExprListEl",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": true,
            "FirstTokMap": false
          },
          {
            "Nm": "Expr",
            "UniqueNm": "Expr",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "BinExpr",
                "type": "parse.Rule",
                "name": "UnryExpr"
              },
              {
                "Nm": "BinExpr",
                "UniqueNm": "BinExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "BinaryExpr",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "UnryExpr",
                "UniqueNm": "UnryExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "UnaryExpr",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "The full set of possible expressions",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": true,
            "FirstTokMap": false
          },
          {
            "Nm": "UnaryExpr",
            "UniqueNm": "UnaryExpr",
            "Props": null,
            "Kids": [
              {
                "n": 7,
                "type": "parse.Rule",
                "name": "PosExpr",
                "type": "parse.Rule",
                "name": "NegExpr",
                "type": "parse.Rule",
                "name": "UnaryXorExpr",
                "type": "parse.Rule",
                "name": "NotExpr",
                "type": "parse.Rule",
                "name": "DePtrExpr",
                "type": "parse.Rule",
                "name": "AddrExpr",
                "type": "parse.Rule",
                "name": "PrimExpr"
              },
              {
                "Nm": "PosExpr",
                "UniqueNm": "PosExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'+' UnaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "NegExpr",
                "UniqueNm": "NegExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'-' UnaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "UnaryXorExpr",
                "UniqueNm": "UnaryXorExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'^' UnaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "NotExpr",
                "UniqueNm": "NotExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'!' UnaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "DePtrExpr",
                "UniqueNm": "DePtrExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'*' UnaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "AddrExpr",
                "UniqueNm": "AddrExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'\u0026' UnaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "PrimExpr",
                "UniqueNm": "PrimExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "essential that this is LAST in unary list, so that distinctive first-position unary tokens match instead of more general cases in primary",
                "Rule": "PrimaryExpr",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": true
          },
          {
            "Nm": "BinaryExpr",
            "UniqueNm": "BinaryExpr",
            "Props": null,
            "Kids": [
              {
                "n": 18,
                "type": "parse.Rule",
                "name": "NotEqExpr",
                "type": "parse.Rule",
                "name": "EqExpr",
                "type": "parse.Rule",
                "name": "LogOrExpr",
                "type": "parse.Rule",
                "name": "LogAndExpr",
                "type": "parse.Rule",
                "name": "GtEqExpr",
                "type": "parse.Rule",
                "name": "GreaterExpr",
                "type": "parse.Rule",
                "name": "LtEqExpr",
                "type": "parse.Rule",
                "name": "LessExpr",
                "type": "parse.Rule",
                "name": "BitOrExpr",
                "type": "parse.Rule",
                "name": "BitXorExpr",
                "type": "parse.Rule",
                "name": "BitAndExpr",
                "type": "parse.Rule",
                "name": "ShiftRightExpr",
                "type": "parse.Rule",
                "name": "ShiftLeftExpr",
                "type": "parse.Rule",
                "name": "SubExpr",
                "type": "parse.Rule",
                "name": "AddExpr",
                "type": "parse.Rule",
                "name": "RemExpr",
                "type": "parse.Rule",
                "name": "DivExpr",
                "type": "parse.Rule",
                "name": "MultExpr"
              },
              {
                "Nm": "NotEqExpr",
                "UniqueNm": "NotEqExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '!=' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "EqExpr",
                "UniqueNm": "EqExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '==' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LogOrExpr",
                "UniqueNm": "LogOrExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '||' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LogAndExpr",
                "UniqueNm": "LogAndExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '\u0026\u0026' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "GtEqExpr",
                "UniqueNm": "GtEqExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '\u003e=' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "GreaterExpr",
                "UniqueNm": "GreaterExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '\u003e' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LtEqExpr",
                "UniqueNm": "LtEqExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '\u003c=' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LessExpr",
                "UniqueNm": "LessExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '\u003c' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "BitOrExpr",
                "UniqueNm": "BitOrExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "-Expr '|' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "BitXorExpr",
                "UniqueNm": "BitXorExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "-Expr '^' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "BitAndExpr",
                "UniqueNm": "BitAndExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "-Expr '\u0026' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ShiftRightExpr",
                "UniqueNm": "ShiftRightExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "-Expr '\u003e\u003e' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ShiftLeftExpr",
                "UniqueNm": "ShiftLeftExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "-Expr '\u003c\u003c' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "SubExpr",
                "UniqueNm": "SubExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "-Expr '-' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "AddExpr",
                "UniqueNm": "AddExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "-Expr '+' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "RemExpr",
                "UniqueNm": "RemExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "-Expr '%' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "DivExpr",
                "UniqueNm": "DivExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "-Expr '/' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "MultExpr",
                "UniqueNm": "MultExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "! expr is exclusion conditions on '*' to deal with possibility of ptr type literal in map or slice",
                "Rule": "-Expr '*' Expr ! ?'key:map' '[' ? ']' '*' 'Name' ?'.' ?'Name'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "due to top-down nature of parser, *lowest* precedence is *first* -- all rules *must* have - first = reverse order to get associativity right",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "PrimaryExpr",
            "UniqueNm": "PrimaryExpr",
            "Props": null,
            "Kids": [
              {
                "n": 20,
                "type": "parse.Rule",
                "name": "LitNumInteger",
                "type": "parse.Rule",
                "name": "LitRune",
                "type": "parse.Rule",
                "name": "LitString",
                "type": "parse.Rule",
                "name": "LitStringDbl",
                "type": "parse.Rule",
                "name": "LitStringTick",
                "type": "parse.Rule",
                "name": "LitNumImag",
                "type": "parse.Rule",
                "name": "LitNumFloat",
                "type": "parse.Rule",
                "name": "FuncExpr",
                "type": "parse.Rule",
                "name": "MakeCall",
                "type": "parse.Rule",
                "name": "NewCall",
                "type": "parse.Rule",
                "name": "Paren",
                "type": "parse.Rule",
                "name": "ConvertBasic",
                "type": "parse.Rule",
                "name": "Convert",
                "type": "parse.Rule",
                "name": "TypeAssert",
                "type": "parse.Rule",
                "name": "CompositeLit",
                "type": "parse.Rule",
                "name": "Selector",
                "type": "parse.Rule",
                "name": "Slice",
                "type": "parse.Rule",
                "name": "MethCall",
                "type": "parse.Rule",
                "name": "FuncCall",
                "type": "parse.Rule",
                "name": "OpName"
              },
              {
                "Nm": "LitNumInteger",
                "UniqueNm": "LitNumInteger",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'LitNumInteger'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitRune",
                "UniqueNm": "LitRune",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "rune",
                "Rule": "'LitStrSingle'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitString",
                "UniqueNm": "LitString",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'LitStr'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitStringDbl",
                "UniqueNm": "LitStringDbl",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'LitStrDouble'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitStringTick",
                "UniqueNm": "LitStringTick",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "todo: get map to work with subcategories..",
                "Rule": "'LitStrBacktick'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitNumImag",
                "UniqueNm": "LitNumImag",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'LitNumImag'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitNumFloat",
                "UniqueNm": "LitNumFloat",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'LitNumFloat'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "FuncExpr",
                "UniqueNm": "FuncExpr",
                "Props": null,
                "Kids": [
                  {
                    "n": 2,
                    "type": "parse.Rule",
                    "name": "FuncLitCall",
                    "type": "parse.Rule",
                    "name": "FuncLit"
                  },
                  {
                    "Nm": "FuncLitCall",
                    "UniqueNm": "FuncLitCall",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:func' Signature '{' ?BlockList '}' '(' ?ArgsExpr ')'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "FuncLit",
                    "UniqueNm": "FuncLit",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:func' Signature '{' ?BlockList '}'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "",
                "Rule": ":'key:func'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "MakeCall",
                "UniqueNm": "MakeCall",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "takes type arg",
                "Rule": "'key:make' '(' Type ?',' ?Expr ?',' ?Expr ')'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "NewCall",
                "UniqueNm": "NewCall",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "takes type arg",
                "Rule": "'key:new' '(' Type ')'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "Paren",
                "UniqueNm": "Paren",
                "Props": null,
                "Kids": [
                  {
                    "n": 2,
                    "type": "parse.Rule",
                    "name": "ConvertParens",
                    "type": "parse.Rule",
                    "name": "ParenExpr"
                  },
                  {
                    "Nm": "ConvertParens",
                    "UniqueNm": "ConvertParens",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'(' @Type ')' '(' Expr ?',' ')' ?PrimaryExpr",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "ParenExpr",
                    "UniqueNm": "ParenExpr",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'(' Expr ')' ?PrimaryExpr",
                    "StackMatch": "",
                    "Ast": "NoAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "",
                "Rule": ":'('",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ConvertBasic",
                "UniqueNm": "ConvertBasic",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "only works with basic builtin types -- others will get taken by FunCall",
                "Rule": "@BasicType '(' Expr ')'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "Convert",
                "UniqueNm": "Convert",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "note: a regular type(expr) will be a FunCall",
                "Rule": "@TypeLiteral '(' Expr ?',' ')'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "TypeAssert",
                "UniqueNm": "TypeAssert",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "must be before FunCall to get . match",
                "Rule": "PrimaryExpr '.' '(' @Type ')' ?PrimaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "CompositeLit",
                "UniqueNm": "CompositeLit",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "important to match sepcific '{' here, not using literal value -- must be before slice, to get map[] keyword instead of slice -- todo: had 'EOS' at the end -- not needed?",
                "Rule": "@LiteralType '{' ?ElementList ?'EOS' '}' ?PrimaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "Selector",
                "UniqueNm": "Selector",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "This must be after unary expr esp addr, DePtr",
                "Rule": "PrimaryExpr '.' PrimaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "[0]",
                    "Tok": "NameTag",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "Slice",
                "UniqueNm": "Slice",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "this needs further right recursion to keep matching more slices",
                "Rule": "?PrimaryExpr '[' SliceExpr ']' ?PrimaryExpr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "MethCall",
                "UniqueNm": "MethCall",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "?PrimaryExpr '.' Name '(' ?ArgsExpr ')'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "[0]",
                    "Tok": "NameFunction",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "FuncCall",
                "UniqueNm": "FuncCall",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "must be after parens",
                "Rule": "PrimaryExpr '(' ?ArgsExpr ')'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "[0]",
                    "Tok": "NameFunction",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "OpName",
                "UniqueNm": "OpName",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "this is the least selective and must be at the end",
                "Rule": "FullName",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": true
          },
          {
            "Nm": "LiteralType",
            "UniqueNm": "LiteralType",
            "Props": null,
            "Kids": [
              {
                "n": 5,
                "type": "parse.Rule",
                "name": "LitStructType",
                "type": "parse.Rule",
                "name": "LitIFaceType",
                "type": "parse.Rule",
                "name": "LitSliceOrArray",
                "type": "parse.Rule",
                "name": "LitMapType",
                "type": "parse.Rule",
                "name": "LitTypeName"
              },
              {
                "Nm": "LitStructType",
                "UniqueNm": "LitStructType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:struct' '{' ?FieldDecls '}' ?'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": 0,
                    "Act": "ChgToken",
                    "Path": "../Name",
                    "Tok": "NameStruct",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": 0,
                    "Act": "PushNewScope",
                    "Path": "../Name",
                    "Tok": "NameStruct",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "PopScopeReg",
                    "Path": "../Name",
                    "Tok": "None",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitIFaceType",
                "UniqueNm": "LitIFaceType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:interface' '{' '}'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitSliceOrArray",
                "UniqueNm": "LitSliceOrArray",
                "Props": null,
                "Kids": [
                  {
                    "n": 3,
                    "type": "parse.Rule",
                    "name": "LitSliceType",
                    "type": "parse.Rule",
                    "name": "LitArrayAutoType",
                    "type": "parse.Rule",
                    "name": "LitArrayType"
                  },
                  {
                    "Nm": "LitSliceType",
                    "UniqueNm": "LitSliceType",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'[' ']' @Type",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": 0,
                        "Act": "ChgToken",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": 0,
                        "Act": "AddSymbol",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "LitArrayAutoType",
                    "UniqueNm": "LitArrayAutoType",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "array must be after slice b/c slice matches on sequence of tokens",
                    "Rule": "'[' '...' ']' @Type",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": 0,
                        "Act": "ChgToken",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": 0,
                        "Act": "AddSymbol",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "LitArrayType",
                    "UniqueNm": "LitArrayType",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "array must be after slice b/c slice matches on sequence of tokens",
                    "Rule": "'[' Expr ']' @Type",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": 0,
                        "Act": "ChgToken",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": 0,
                        "Act": "AddSymbol",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "",
                "Rule": ":'['",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitMapType",
                "UniqueNm": "LitMapType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:map' '[' @Type ']' @Type",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": 0,
                    "Act": "ChgToken",
                    "Path": "../Name",
                    "Tok": "NameMap",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": 0,
                    "Act": "AddSymbol",
                    "Path": "../Name",
                    "Tok": "NameMap",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LitTypeName",
                "UniqueNm": "LitTypeName",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "this is very general, must be at end..",
                "Rule": "TypeName",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": true
          },
          {
            "Nm": "LiteralValue",
            "UniqueNm": "LiteralValue",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "'{' ElementList ?'EOS' '}' 'EOS'",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "ElementList",
            "UniqueNm": "ElementList",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "ElementListEls",
                "type": "parse.Rule",
                "name": "KeyedEl"
              },
              {
                "Nm": "ElementListEls",
                "UniqueNm": "ElementListEls",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "KeyedEl ',' ?ElementList",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "KeyedEl",
                "UniqueNm": "KeyedEl",
                "Props": null,
                "Kids": [
                  {
                    "n": 2,
                    "type": "parse.Rule",
                    "name": "KeyEl",
                    "type": "parse.Rule",
                    "name": "Element"
                  },
                  {
                    "Nm": "KeyEl",
                    "UniqueNm": "KeyEl",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "Key ':' Element",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "Element",
                    "UniqueNm": "Element",
                    "Props": null,
                    "Kids": [
                      {
                        "n": 3,
                        "type": "parse.Rule",
                        "name": "EmptyEl",
                        "type": "parse.Rule",
                        "name": "ElExpr",
                        "type": "parse.Rule",
                        "name": "ElLitVal"
                      },
                      {
                        "Nm": "EmptyEl",
                        "UniqueNm": "EmptyEl",
                        "Props": null,
                        "Kids": null,
                        "Off": false,
                        "Desc": "",
                        "Rule": "'{' '}'",
                        "StackMatch": "",
                        "Ast": "SubAst",
                        "Acts": null,
                        "OptTokMap": false,
                        "FirstTokMap": false
                      },
                      {
                        "Nm": "ElExpr",
                        "UniqueNm": "ElExpr",
                        "Props": null,
                        "Kids": null,
                        "Off": false,
                        "Desc": "",
                        "Rule": "Expr",
                        "StackMatch": "",
                        "Ast": "NoAst",
                        "Acts": null,
                        "OptTokMap": false,
                        "FirstTokMap": false
                      },
                      {
                        "Nm": "ElLitVal",
                        "UniqueNm": "ElLitVal",
                        "Props": null,
                        "Kids": null,
                        "Off": false,
                        "Desc": "",
                        "Rule": "LiteralValue",
                        "StackMatch": "",
                        "Ast": "NoAst",
                        "Acts": null,
                        "OptTokMap": false,
                        "FirstTokMap": false
                      }
                    ],
                    "Off": false,
                    "Desc": "",
                    "Rule": "",
                    "StackMatch": "",
                    "Ast": "NoAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "",
                "Rule": "",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Key",
            "UniqueNm": "Key",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "KeyLitVal",
                "type": "parse.Rule",
                "name": "KeyExpr"
              },
              {
                "Nm": "KeyLitVal",
                "UniqueNm": "KeyLitVal",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "LiteralValue",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "KeyExpr",
                "UniqueNm": "KeyExpr",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "RecvType",
            "UniqueNm": "RecvType",
            "Props": null,
            "Kids": [
              {
                "n": 3,
                "type": "parse.Rule",
                "name": "RecvPtrType",
                "type": "parse.Rule",
                "name": "ParenRecvType",
                "type": "parse.Rule",
                "name": "RecvTp"
              },
              {
                "Nm": "RecvPtrType",
                "UniqueNm": "RecvPtrType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'(' '*' TypeName ')'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ParenRecvType",
                "UniqueNm": "ParenRecvType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'(' RecvType ')'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "RecvTp",
                "UniqueNm": "RecvTp",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "TypeName",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Selectors",
            "UniqueNm": "Selectors",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "Sels",
                "type": "parse.Rule",
                "name": "Sel"
              },
              {
                "Nm": "Sels",
                "UniqueNm": "Sels",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Name '.' Selectors",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "Sel",
                "UniqueNm": "Sel",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Name",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "SubSlice",
            "UniqueNm": "SubSlice",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "'[' SliceExpr ']' ?SubSlice",
            "StackMatch": "",
            "Ast": "SubAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "SliceExpr",
            "UniqueNm": "SliceExpr",
            "Props": null,
            "Kids": [
              {
                "n": 3,
                "type": "parse.Rule",
                "name": "SliceThree",
                "type": "parse.Rule",
                "name": "SliceTwo",
                "type": "parse.Rule",
                "name": "SliceOne"
              },
              {
                "Nm": "SliceThree",
                "UniqueNm": "SliceThree",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "?SliceIdx1 ':' SliceIdx2 ':' SliceIdx3",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "SliceTwo",
                "UniqueNm": "SliceTwo",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "?SliceIdx1 ':' ?SliceIdx2",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "SliceOne",
                "UniqueNm": "SliceOne",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "SliceIdxs",
            "UniqueNm": "SliceIdxs",
            "Props": null,
            "Kids": [
              {
                "n": 3,
                "type": "parse.Rule",
                "name": "SliceIdx1",
                "type": "parse.Rule",
                "name": "SliceIdx2",
                "type": "parse.Rule",
                "name": "SliceIdx3"
              },
              {
                "Nm": "SliceIdx1",
                "UniqueNm": "SliceIdx1",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "SliceIdx2",
                "UniqueNm": "SliceIdx2",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "SliceIdx3",
                "UniqueNm": "SliceIdx3",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "ArgsExpr",
            "UniqueNm": "ArgsExpr",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "ArgsEllipsis",
                "type": "parse.Rule",
                "name": "Args"
              },
              {
                "Nm": "ArgsEllipsis",
                "UniqueNm": "ArgsEllipsis",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ArgsList '...'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "Args",
                "UniqueNm": "Args",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ArgsList",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "ArgsList",
            "UniqueNm": "ArgsList",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "ArgsListEls",
                "type": "parse.Rule",
                "name": "ArgsListEl"
              },
              {
                "Nm": "ArgsListEls",
                "UniqueNm": "ArgsListEls",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr ',' ArgsList",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ArgsListEl",
                "UniqueNm": "ArgsListEl",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": [],
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          }
        ],
        "Off": false,
        "Desc": "many different rules here that go into expressions etc",
        "Rule": "",
        "StackMatch": "",
        "Ast": "NoAst",
        "Acts": null,
        "OptTokMap": false,
        "FirstTokMap": false
      },
      {
        "Nm": "TypeRules",
        "UniqueNm": "TypeRules",
        "Props": null,
        "Kids": [
          {
            "n": 10,
            "type": "parse.Rule",
            "name": "Type",
            "type": "parse.Rule",
            "name": "TypeName",
            "type": "parse.Rule",
            "name": "PtrOrTypeName",
            "type": "parse.Rule",
            "name": "TypeLiteral",
            "type": "parse.Rule",
            "name": "FieldDecls",
            "type": "parse.Rule",
            "name": "FieldDecl",
            "type": "parse.Rule",
            "name": "FieldTag",
            "type": "parse.Rule",
            "name": "TypeDeclN",
            "type": "parse.Rule",
            "name": "TypeDecls",
            "type": "parse.Rule",
            "name": "TypeList"
          },
          {
            "Nm": "Type",
            "UniqueNm": "Type",
            "Props": null,
            "Kids": [
              {
                "n": 3,
                "type": "parse.Rule",
                "name": "ParenType",
                "type": "parse.Rule",
                "name": "TypeLit",
                "type": "parse.Rule",
                "name": "TypeNms"
              },
              {
                "Nm": "ParenType",
                "UniqueNm": "ParenType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'(' @Type ')'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "TypeLit",
                "UniqueNm": "TypeLit",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "TypeLiteral",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "TypeNms",
                "UniqueNm": "TypeNms",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "TypeName",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "type specifies a type either as a type name or type expression",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": true,
            "FirstTokMap": false
          },
          {
            "Nm": "TypeName",
            "UniqueNm": "TypeName",
            "Props": null,
            "Kids": [
              {
                "n": 3,
                "type": "parse.Rule",
                "name": "BasicType",
                "type": "parse.Rule",
                "name": "QualType",
                "type": "parse.Rule",
                "name": "TypeNm"
              },
              {
                "Nm": "BasicType",
                "UniqueNm": "BasicType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "recognizes builtin types",
                "Rule": "'KeywordType'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "QualType",
                "UniqueNm": "QualType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "type equivalent to QualName",
                "Rule": "'Name' '.' 'Name'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "",
                    "Tok": "NameType",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "TypeNm",
                "UniqueNm": "TypeNm",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "local unqualified type name",
                "Rule": "'Name'",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "",
                    "Tok": "NameType",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "PtrOrTypeName",
            "UniqueNm": "PtrOrTypeName",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "PtrTypeName",
                "type": "parse.Rule",
                "name": "NoPtrTypeName"
              },
              {
                "Nm": "PtrTypeName",
                "UniqueNm": "PtrTypeName",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'*' TypeName",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "NoPtrTypeName",
                "UniqueNm": "NoPtrTypeName",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "TypeName",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "regular type name or pointer to type name",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "TypeLiteral",
            "UniqueNm": "TypeLiteral",
            "Props": null,
            "Kids": [
              {
                "n": 8,
                "type": "parse.Rule",
                "name": "SliceOrArray",
                "type": "parse.Rule",
                "name": "StructType",
                "type": "parse.Rule",
                "name": "PointerType",
                "type": "parse.Rule",
                "name": "FuncType",
                "type": "parse.Rule",
                "name": "InterfaceType",
                "type": "parse.Rule",
                "name": "MapType",
                "type": "parse.Rule",
                "name": "SendChanType",
                "type": "parse.Rule",
                "name": "ChannelType"
              },
              {
                "Nm": "SliceOrArray",
                "UniqueNm": "SliceOrArray",
                "Props": null,
                "Kids": [
                  {
                    "n": 3,
                    "type": "parse.Rule",
                    "name": "SliceType",
                    "type": "parse.Rule",
                    "name": "ArrayAutoType",
                    "type": "parse.Rule",
                    "name": "ArrayType"
                  },
                  {
                    "Nm": "SliceType",
                    "UniqueNm": "SliceType",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'[' ']' @Type",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": 0,
                        "Act": "ChgToken",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": 0,
                        "Act": "AddSymbol",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "ArrayAutoType",
                    "UniqueNm": "ArrayAutoType",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "array must be after slice b/c slice matches on sequence of tokens",
                    "Rule": "'[' '...' ']' @Type",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": 0,
                        "Act": "ChgToken",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": 0,
                        "Act": "AddSymbol",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "ArrayType",
                    "UniqueNm": "ArrayType",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "array must be after slice b/c slice matches on sequence of tokens",
                    "Rule": "'[' Expr ']' @Type",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": 0,
                        "Act": "ChgToken",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": 0,
                        "Act": "AddSymbol",
                        "Path": "../Name",
                        "Tok": "NameArray",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "",
                "Rule": ":'['",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "StructType",
                "UniqueNm": "StructType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:struct' '{' ?FieldDecls '}' ?'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": 0,
                    "Act": "ChgToken",
                    "Path": "../Name",
                    "Tok": "NameStruct",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": 0,
                    "Act": "PushNewScope",
                    "Path": "../Name",
                    "Tok": "NameStruct",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "PopScopeReg",
                    "Path": "../Name",
                    "Tok": "None",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "PointerType",
                "UniqueNm": "PointerType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'*' @Type",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "FuncType",
                "UniqueNm": "FuncType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:func' @Signature",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "InterfaceType",
                "UniqueNm": "InterfaceType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:interface' '{' ?MethodSpecs '}'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": 0,
                    "Act": "ChgToken",
                    "Path": "../Name",
                    "Tok": "NameInterface",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": 0,
                    "Act": "PushNewScope",
                    "Path": "../Name",
                    "Tok": "NameInterface",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "PopScopeReg",
                    "Path": "../Name",
                    "Tok": "None",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "MapType",
                "UniqueNm": "MapType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:map' '[' @Type ']' @Type",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": 0,
                    "Act": "ChgToken",
                    "Path": "../Name",
                    "Tok": "NameMap",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": 0,
                    "Act": "AddSymbol",
                    "Path": "../Name",
                    "Tok": "NameMap",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "SendChanType",
                "UniqueNm": "SendChanType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'\u003c-' 'key:chan' @Type",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ChannelType",
                "UniqueNm": "ChannelType",
                "Props": null,
                "Kids": [
                  {
                    "n": 2,
                    "type": "parse.Rule",
                    "name": "RecvChanType",
                    "type": "parse.Rule",
                    "name": "SRChanType"
                  },
                  {
                    "Nm": "RecvChanType",
                    "UniqueNm": "RecvChanType",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:chan' '\u003c-' @Type",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "SRChanType",
                    "UniqueNm": "SRChanType",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:chan' @Type",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "",
                "Rule": ":'key:chan'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": true
          },
          {
            "Nm": "FieldDecls",
            "UniqueNm": "FieldDecls",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "FieldDecl ?FieldDecls",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "FieldDecl",
            "UniqueNm": "FieldDecl",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "AnonQualField",
                "type": "parse.Rule",
                "name": "NamedField"
              },
              {
                "Nm": "AnonQualField",
                "UniqueNm": "AnonQualField",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'Name' '.' 'Name' ?FieldTag 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "",
                    "Tok": "NamePackage",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "NamedField",
                "UniqueNm": "NamedField",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "NameList ?Type ?FieldTag 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "NameListEl\u0026NameListEls/Name...\u0026NameListEls/NameListEl",
                    "Tok": "NameField",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "NameListEl\u0026NameListEls/Name...\u0026NameListEls/NameListEl",
                    "Tok": "NameField",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "FieldTag",
            "UniqueNm": "FieldTag",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "'LitStr'",
            "StackMatch": "",
            "Ast": "AddAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "TypeDeclN",
            "UniqueNm": "TypeDeclN",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "TypeDeclGroup",
                "type": "parse.Rule",
                "name": "TypeDeclEl"
              },
              {
                "Nm": "TypeDeclGroup",
                "UniqueNm": "TypeDeclGroup",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'(' TypeDecls ')'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "TypeDeclEl",
                "UniqueNm": "TypeDeclEl",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Name Type 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "Name",
                    "Tok": "NameType",
                    "FmTok": "Name"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "Name",
                    "Tok": "NameType",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddDetail",
                    "Path": "[1]",
                    "Tok": "None",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddType",
                    "Path": "Name",
                    "Tok": "None",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "N = switch between 1 or multi",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "TypeDecls",
            "UniqueNm": "TypeDecls",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "TypeDeclEl ?TypeDecls",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "TypeList",
            "UniqueNm": "TypeList",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "TypeListEls",
                "type": "parse.Rule",
                "name": "TypeListEl"
              },
              {
                "Nm": "TypeListEls",
                "UniqueNm": "TypeListEls",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Type ',' TypeList",
                "StackMatch": "",
                "Ast": "AnchorFirstAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "TypeListEl",
                "UniqueNm": "TypeListEl",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Type",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Rule": "",
        "StackMatch": "",
        "Ast": "NoAst",
        "Acts": null,
        "OptTokMap": false,
        "FirstTokMap": false
      },
      {
        "Nm": "FuncRules",
        "UniqueNm": "FuncRules",
        "Props": null,
        "Kids": [
          {
            "n": 8,
            "type": "parse.Rule",
            "name": "FunDecl",
            "type": "parse.Rule",
            "name": "MethRecv",
            "type": "parse.Rule",
            "name": "Signature",
            "type": "parse.Rule",
            "name": "MethodSpec",
            "type": "parse.Rule",
            "name": "MethodSpecs",
            "type": "parse.Rule",
            "name": "Result",
            "type": "parse.Rule",
            "name": "ParamsList",
            "type": "parse.Rule",
            "name": "Params"
          },
          {
            "Nm": "FunDecl",
            "UniqueNm": "FunDecl",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "MethDecl",
                "type": "parse.Rule",
                "name": "FuncDecl"
              },
              {
                "Nm": "MethDecl",
                "UniqueNm": "MethDecl",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:func' '(' MethRecv ')' Name Signature ?Block 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": 5,
                    "Act": "ChgToken",
                    "Path": "Name",
                    "Tok": "NameMethod",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": 5,
                    "Act": "PushNewScope",
                    "Path": "Name",
                    "Tok": "NameMethod",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddDetail",
                    "Path": "MethRecv",
                    "Tok": "None",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddDetail",
                    "Path": "SigParams|SigParamsResult",
                    "Tok": "None",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "MethRecv/Name",
                    "Tok": "NameVarClass",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "PopScopeReg",
                    "Path": "",
                    "Tok": "None",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "PopScope",
                    "Path": "",
                    "Tok": "None",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "FuncDecl",
                "UniqueNm": "FuncDecl",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:func' Name Signature ?Block 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "Name",
                    "Tok": "NameFunction",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": 2,
                    "Act": "PushNewScope",
                    "Path": "Name",
                    "Tok": "NameFunction",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddDetail",
                    "Path": "SigParams|SigParamsResult",
                    "Tok": "None",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "PopScopeReg",
                    "Path": "",
                    "Tok": "None",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "MethRecv",
            "UniqueNm": "MethRecv",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "Name Type",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": [
              {
                "RunIdx": -1,
                "Act": "PushScope",
                "Path": "TypeNm|PointerType/TypeNm",
                "Tok": "NameStruct",
                "FmTok": "None"
              }
            ],
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Signature",
            "UniqueNm": "Signature",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "SigParamsResult",
                "type": "parse.Rule",
                "name": "SigParams"
              },
              {
                "Nm": "SigParamsResult",
                "UniqueNm": "SigParamsResult",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "all types must fully match, using @",
                "Rule": "@Params @Result",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "SigParams",
                "UniqueNm": "SigParams",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "@Params",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "MethodSpec",
            "UniqueNm": "MethodSpec",
            "Props": null,
            "Kids": [
              {
                "n": 4,
                "type": "parse.Rule",
                "name": "MethSpecAnonQual",
                "type": "parse.Rule",
                "name": "MethSpecName",
                "type": "parse.Rule",
                "name": "MethSpecAnonLocal",
                "type": "parse.Rule",
                "name": "MethSpecNone"
              },
              {
                "Nm": "MethSpecAnonQual",
                "UniqueNm": "MethSpecAnonQual",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'Name' '.' 'Name' 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "",
                    "Tok": "NameInterface",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "",
                    "Tok": "NameInterface",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "MethSpecName",
                "UniqueNm": "MethSpecName",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "@Name @Params ?Result 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "Name",
                    "Tok": "NameMethod",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "Name",
                    "Tok": "NameMethod",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "MethSpecAnonLocal",
                "UniqueNm": "MethSpecAnonLocal",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'Name' 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "",
                    "Tok": "NameInterface",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "",
                    "Tok": "NameInterface",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "MethSpecNone",
                "UniqueNm": "MethSpecNone",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'EOS'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "for interfaces only -- interface methods",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "MethodSpecs",
            "UniqueNm": "MethodSpecs",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "MethodSpec ?MethodSpecs",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Result",
            "UniqueNm": "Result",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "Results",
                "type": "parse.Rule",
                "name": "ResultOne"
              },
              {
                "Nm": "Results",
                "UniqueNm": "Results",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'(' ParamsList ')'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ResultOne",
                "UniqueNm": "ResultOne",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Type",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "ParamsList",
            "UniqueNm": "ParamsList",
            "Props": null,
            "Kids": [
              {
                "n": 4,
                "type": "parse.Rule",
                "name": "ParNameEllipsis",
                "type": "parse.Rule",
                "name": "ParName",
                "type": "parse.Rule",
                "name": "ParType",
                "type": "parse.Rule",
                "name": "ParNames"
              },
              {
                "Nm": "ParNameEllipsis",
                "UniqueNm": "ParNameEllipsis",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "?ParamsList ?',' ?NameList '...' @Type",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ParName",
                "UniqueNm": "ParName",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "@Name @Type ?',' ?ParamsList",
                "StackMatch": "",
                "Ast": "SubAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ParType",
                "UniqueNm": "ParType",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "@Type ?',' ?ParamsList",
                "StackMatch": "",
                "Ast": "SubAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ParNames",
                "UniqueNm": "ParNames",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "need the explicit ',' in here to absorb so later one goes to paramslist",
                "Rule": "@Name ',' @NameList @Type ?',' ?ParamsList",
                "StackMatch": "",
                "Ast": "SubAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Params",
            "UniqueNm": "Params",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "'(' ?ParamsList ')'",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Rule": "",
        "StackMatch": "",
        "Ast": "NoAst",
        "Acts": null,
        "OptTokMap": false,
        "FirstTokMap": false
      },
      {
        "Nm": "StmtRules",
        "UniqueNm": "StmtRules",
        "Props": null,
        "Kids": [
          {
            "n": 8,
            "type": "parse.Rule",
            "name": "StmtList",
            "type": "parse.Rule",
            "name": "BlockList",
            "type": "parse.Rule",
            "name": "Stmt",
            "type": "parse.Rule",
            "name": "SimpleStmt",
            "type": "parse.Rule",
            "name": "PostStmt",
            "type": "parse.Rule",
            "name": "Asgn",
            "type": "parse.Rule",
            "name": "Elses",
            "type": "parse.Rule",
            "name": "CommStmt"
          },
          {
            "Nm": "StmtList",
            "UniqueNm": "StmtList",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "Stmt 'EOS' ?StmtList",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "BlockList",
            "UniqueNm": "BlockList",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "StmtList",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Stmt",
            "UniqueNm": "Stmt",
            "Props": null,
            "Kids": [
              {
                "n": 18,
                "type": "parse.Rule",
                "name": "ConstDeclStmt",
                "type": "parse.Rule",
                "name": "TypeDeclStmt",
                "type": "parse.Rule",
                "name": "VarDeclStmt",
                "type": "parse.Rule",
                "name": "ReturnStmt",
                "type": "parse.Rule",
                "name": "BreakStmt",
                "type": "parse.Rule",
                "name": "ContStmt",
                "type": "parse.Rule",
                "name": "GotoStmt",
                "type": "parse.Rule",
                "name": "GoStmt",
                "type": "parse.Rule",
                "name": "FallthroughStmt",
                "type": "parse.Rule",
                "name": "DeferStmt",
                "type": "parse.Rule",
                "name": "IfStmt",
                "type": "parse.Rule",
                "name": "ForStmt",
                "type": "parse.Rule",
                "name": "SwitchStmt",
                "type": "parse.Rule",
                "name": "CaseStmt",
                "type": "parse.Rule",
                "name": "DefaultStmt",
                "type": "parse.Rule",
                "name": "LabeledStmt",
                "type": "parse.Rule",
                "name": "Block",
                "type": "parse.Rule",
                "name": "SimpleSt"
              },
              {
                "Nm": "ConstDeclStmt",
                "UniqueNm": "ConstDeclStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:const' ConstDeclN 'EOS'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "TypeDeclStmt",
                "UniqueNm": "TypeDeclStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:type' TypeDeclN 'EOS'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "VarDeclStmt",
                "UniqueNm": "VarDeclStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:var' VarDeclN 'EOS'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ReturnStmt",
                "UniqueNm": "ReturnStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:return' ?ExprList 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "BreakStmt",
                "UniqueNm": "BreakStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:break' ?Name 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ContStmt",
                "UniqueNm": "ContStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:continue' ?Name 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "GotoStmt",
                "UniqueNm": "GotoStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:goto' Name 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "GoStmt",
                "UniqueNm": "GoStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:go' Expr 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "FallthroughStmt",
                "UniqueNm": "FallthroughStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:fallthrough' 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "DeferStmt",
                "UniqueNm": "DeferStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:defer' Expr 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "IfStmt",
                "UniqueNm": "IfStmt",
                "Props": null,
                "Kids": [
                  {
                    "n": 2,
                    "type": "parse.Rule",
                    "name": "IfStmtExpr",
                    "type": "parse.Rule",
                    "name": "IfStmtInit"
                  },
                  {
                    "Nm": "IfStmtExpr",
                    "UniqueNm": "IfStmtExpr",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:if' Expr '{' ?BlockList '}' ?Elses 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "IfStmtInit",
                    "UniqueNm": "IfStmtInit",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:if' SimpleStmt 'EOS' Expr '{' ?BlockList '}' ?Elses 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "just matches if keyword",
                "Rule": ":'key:if'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ForStmt",
                "UniqueNm": "ForStmt",
                "Props": null,
                "Kids": [
                  {
                    "n": 5,
                    "type": "parse.Rule",
                    "name": "ForRangeExisting",
                    "type": "parse.Rule",
                    "name": "ForRangeNew",
                    "type": "parse.Rule",
                    "name": "ForRangeOnly",
                    "type": "parse.Rule",
                    "name": "ForExpr",
                    "type": "parse.Rule",
                    "name": "ForClauseStmt"
                  },
                  {
                    "Nm": "ForRangeExisting",
                    "UniqueNm": "ForRangeExisting",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:for' ExprList '=' 'key:range' Expr '{' ?BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "ForRangeNew",
                    "UniqueNm": "ForRangeNew",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:for' NameList ':=' 'key:range' Expr '{' ?BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": -1,
                        "Act": "ChgToken",
                        "Path": "NameListEls",
                        "Tok": "NameVar",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "ForRangeOnly",
                    "UniqueNm": "ForRangeOnly",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:for' 'key:range' Expr '{' ?BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": -1,
                        "Act": "ChgToken",
                        "Path": "NameListEls",
                        "Tok": "NameVar",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "ForExpr",
                    "UniqueNm": "ForExpr",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "most general at end",
                    "Rule": "'key:for' ?Expr '{' ?BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "ForClauseStmt",
                    "UniqueNm": "ForClauseStmt",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "the embedded EOS's here require full expr here so final EOS has proper EOS StInc count",
                    "Rule": "'key:for' ?SimpleStmt 'EOS' ?Expr 'EOS' ?PostStmt '{' ?BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "just for matching for token -- delegates to children",
                "Rule": ":'key:for'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "SwitchStmt",
                "UniqueNm": "SwitchStmt",
                "Props": null,
                "Kids": [
                  {
                    "n": 6,
                    "type": "parse.Rule",
                    "name": "SwitchTypeName",
                    "type": "parse.Rule",
                    "name": "SwitchTypeAnon",
                    "type": "parse.Rule",
                    "name": "SwitchExpr",
                    "type": "parse.Rule",
                    "name": "SwitchInit",
                    "type": "parse.Rule",
                    "name": "SwitchTypeNameInit",
                    "type": "parse.Rule",
                    "name": "SwitchTypeAnonInit"
                  },
                  {
                    "Nm": "SwitchTypeName",
                    "UniqueNm": "SwitchTypeName",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:switch' 'Name' ':=' PrimaryExpr '.' '(' 'key:type' ')' '{' BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": 0,
                        "Act": "PushStack",
                        "Path": "SwitchType",
                        "Tok": "None",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": -1,
                        "Act": "PopStack",
                        "Path": "",
                        "Tok": "None",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "SwitchTypeAnon",
                    "UniqueNm": "SwitchTypeAnon",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:switch' PrimaryExpr '.' '(' 'key:type' ')' '{' BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": 0,
                        "Act": "PushStack",
                        "Path": "SwitchType",
                        "Tok": "None",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": -1,
                        "Act": "PopStack",
                        "Path": "",
                        "Tok": "None",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "SwitchExpr",
                    "UniqueNm": "SwitchExpr",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:switch' ?Expr '{' BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "SwitchInit",
                    "UniqueNm": "SwitchInit",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:switch' SimpleStmt 'EOS' ?Expr '{' BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "SwitchTypeNameInit",
                    "UniqueNm": "SwitchTypeNameInit",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:switch' SimpleStmt 'EOS' 'Name' ':=' PrimaryExpr '.' '(' Type ')' '{' BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "SwitchTypeAnonInit",
                    "UniqueNm": "SwitchTypeAnonInit",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "'key:switch' SimpleStmt 'EOS' PrimaryExpr '.' '(' Type ')' '{' BlockList -'}' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "",
                "Rule": ":'key:switch'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "CaseStmt",
                "UniqueNm": "CaseStmt",
                "Props": null,
                "Kids": [
                  {
                    "n": 5,
                    "type": "parse.Rule",
                    "name": "TypeCaseEmptyStmt",
                    "type": "parse.Rule",
                    "name": "TypeCaseStmt",
                    "type": "parse.Rule",
                    "name": "CaseEmptyStmt",
                    "type": "parse.Rule",
                    "name": "CaseExprStmt",
                    "type": "parse.Rule",
                    "name": "SelCaseStmt"
                  },
                  {
                    "Nm": "TypeCaseEmptyStmt",
                    "UniqueNm": "TypeCaseEmptyStmt",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "case and default require post-step to create sub-block -- no explicit { } scoping",
                    "Rule": "'key:case' @TypeList ':' 'EOS'",
                    "StackMatch": "SwitchType",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "TypeCaseStmt",
                    "UniqueNm": "TypeCaseStmt",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "case and default require post-step to create sub-block -- no explicit { } scoping",
                    "Rule": "'key:case' @TypeList ':' Stmt",
                    "StackMatch": "SwitchType",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "CaseEmptyStmt",
                    "UniqueNm": "CaseEmptyStmt",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "case and default require post-step to create sub-block -- no explicit { } scoping",
                    "Rule": "'key:case' ExprList ':' 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "CaseExprStmt",
                    "UniqueNm": "CaseExprStmt",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "case and default require post-step to create sub-block -- no explicit { } scoping",
                    "Rule": "'key:case' ExprList ':' Stmt",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "SelCaseStmt",
                    "UniqueNm": "SelCaseStmt",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "case and default require post-step to create sub-block -- no explicit { } scoping",
                    "Rule": "'key:case' CommStmt 'EOS' ?Stmt",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": null,
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "",
                "Rule": ":'key:case'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "DefaultStmt",
                "UniqueNm": "DefaultStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:default' ':' ?Stmt",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "LabeledStmt",
                "UniqueNm": "LabeledStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "@Name ':' ?Stmt",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "",
                    "Tok": "NameLabel",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "Block",
                "UniqueNm": "Block",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'{' ?StmtList -'}' 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "SimpleSt",
                "UniqueNm": "SimpleSt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "SimpleStmt",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": true
          },
          {
            "Nm": "SimpleStmt",
            "UniqueNm": "SimpleStmt",
            "Props": null,
            "Kids": [
              {
                "n": 5,
                "type": "parse.Rule",
                "name": "SendStmt",
                "type": "parse.Rule",
                "name": "IncrStmt",
                "type": "parse.Rule",
                "name": "DecrStmt",
                "type": "parse.Rule",
                "name": "AsgnStmt",
                "type": "parse.Rule",
                "name": "ExprStmt"
              },
              {
                "Nm": "SendStmt",
                "UniqueNm": "SendStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "?Expr '\u003c-' Expr 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "IncrStmt",
                "UniqueNm": "IncrStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '++' 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "DecrStmt",
                "UniqueNm": "DecrStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '--' 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "AsgnStmt",
                "UniqueNm": "AsgnStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Asgn",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ExprStmt",
                "UniqueNm": "ExprStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "PostStmt",
            "UniqueNm": "PostStmt",
            "Props": null,
            "Kids": [
              {
                "n": 8,
                "type": "parse.Rule",
                "name": "PostSendStmt",
                "type": "parse.Rule",
                "name": "PostIncrStmt",
                "type": "parse.Rule",
                "name": "PostDecrStmt",
                "type": "parse.Rule",
                "name": "PostAsgnExisting",
                "type": "parse.Rule",
                "name": "PostAsgnBit",
                "type": "parse.Rule",
                "name": "PostAsgnMath",
                "type": "parse.Rule",
                "name": "PostAsgnNew",
                "type": "parse.Rule",
                "name": "PostExprStmt"
              },
              {
                "Nm": "PostSendStmt",
                "UniqueNm": "PostSendStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "?Expr '\u003c-' Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "PostIncrStmt",
                "UniqueNm": "PostIncrStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '++'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "PostDecrStmt",
                "UniqueNm": "PostDecrStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr '--'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "PostAsgnExisting",
                "UniqueNm": "PostAsgnExisting",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ExprList '=' ExprList",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "PostAsgnBit",
                "UniqueNm": "PostAsgnBit",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ExprList 'OpBitAsgn' ExprList",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "PostAsgnMath",
                "UniqueNm": "PostAsgnMath",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ExprList 'OpMathAsgn' ExprList",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "PostAsgnNew",
                "UniqueNm": "PostAsgnNew",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ExprList ':=' ExprList",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "Name...",
                    "Tok": "NameVar",
                    "FmTok": "Name"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "Name",
                    "Tok": "NameVar",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddDetail",
                    "Path": "[1]",
                    "Tok": "None",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "PostExprStmt",
                "UniqueNm": "PostExprStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "Expr",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "for loop post statement -- has no EOS",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Asgn",
            "UniqueNm": "Asgn",
            "Props": null,
            "Kids": [
              {
                "n": 4,
                "type": "parse.Rule",
                "name": "AsgnExisting",
                "type": "parse.Rule",
                "name": "AsgnNew",
                "type": "parse.Rule",
                "name": "AsgnMath",
                "type": "parse.Rule",
                "name": "AsgnBit"
              },
              {
                "Nm": "AsgnExisting",
                "UniqueNm": "AsgnExisting",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ExprList '=' ExprList 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "AsgnNew",
                "UniqueNm": "AsgnNew",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ExprList ':=' ExprList 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "Name...",
                    "Tok": "NameVar",
                    "FmTok": "Name"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "Name",
                    "Tok": "NameVar",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "AddDetail",
                    "Path": "[1]",
                    "Tok": "None",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "AsgnMath",
                "UniqueNm": "AsgnMath",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ExprList 'OpMathAsgn' ExprList 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "AsgnBit",
                "UniqueNm": "AsgnBit",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ExprList 'OpBitAsgn' ExprList 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": [],
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "Elses",
            "UniqueNm": "Elses",
            "Props": null,
            "Kids": [
              {
                "n": 3,
                "type": "parse.Rule",
                "name": "ElseIfStmt",
                "type": "parse.Rule",
                "name": "ElseStmt",
                "type": "parse.Rule",
                "name": "ElseIfStmtInit"
              },
              {
                "Nm": "ElseIfStmt",
                "UniqueNm": "ElseIfStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:else' 'key:if' Expr '{' ?BlockList '}' ?Elses 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ElseStmt",
                "UniqueNm": "ElseStmt",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:else' '{' ?BlockList -'}' 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ElseIfStmtInit",
                "UniqueNm": "ElseIfStmtInit",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'key:else' 'key:if' SimpleStmt 'EOS' Expr '{' ?BlockList '}' ?Elses 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "CommStmt",
            "UniqueNm": "CommStmt",
            "Props": null,
            "Kids": [
              {
                "n": 3,
                "type": "parse.Rule",
                "name": "CommSend",
                "type": "parse.Rule",
                "name": "RecvExisting",
                "type": "parse.Rule",
                "name": "RecvNew"
              },
              {
                "Nm": "CommSend",
                "UniqueNm": "CommSend",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "SendStmt",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "RecvExisting",
                "UniqueNm": "RecvExisting",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "ExprList '=' Expr 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "RecvNew",
                "UniqueNm": "RecvNew",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "NameList ':=' Expr 'EOS'",
                "StackMatch": "",
                "Ast": "AnchorAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "communication stmt: send or recv",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Rule": "",
        "StackMatch": "",
        "Ast": "NoAst",
        "Acts": null,
        "OptTokMap": false,
        "FirstTokMap": false
      },
      {
        "Nm": "ImportRules",
        "UniqueNm": "ImportRules",
        "Props": null,
        "Kids": [
          {
            "n": 2,
            "type": "parse.Rule",
            "name": "ImportN",
            "type": "parse.Rule",
            "name": "ImportList"
          },
          {
            "Nm": "ImportN",
            "UniqueNm": "ImportN",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "ImportGroup",
                "type": "parse.Rule",
                "name": "ImportOne"
              },
              {
                "Nm": "ImportGroup",
                "UniqueNm": "ImportGroup",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "group of multiple imports",
                "Rule": "'(' ImportList ')'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ImportOne",
                "UniqueNm": "ImportOne",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "single import -- ImportList also allows diff options",
                "Rule": "ImportList",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "N = number switch (One vs. Group)",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "ImportList",
            "UniqueNm": "ImportList",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "ImportAlias",
                "type": "parse.Rule",
                "name": "Import"
              },
              {
                "Nm": "ImportAlias",
                "UniqueNm": "ImportAlias",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "put more specialized rules first",
                "Rule": "'Name' 'LitStr' ?'EOS' ?ImportList",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "",
                    "Tok": "NameLibrary",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "",
                    "Tok": "NameLibrary",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "Import",
                "UniqueNm": "Import",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'LitStr' ?'EOS' ?ImportList",
                "StackMatch": "",
                "Ast": "AddAst",
                "Acts": [
                  {
                    "RunIdx": -1,
                    "Act": "AddSymbol",
                    "Path": "",
                    "Tok": "NameLibrary",
                    "FmTok": "None"
                  },
                  {
                    "RunIdx": -1,
                    "Act": "ChgToken",
                    "Path": "",
                    "Tok": "NameLibrary",
                    "FmTok": "None"
                  }
                ],
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Rule": "",
        "StackMatch": "",
        "Ast": "NoAst",
        "Acts": null,
        "OptTokMap": false,
        "FirstTokMap": false
      },
      {
        "Nm": "DeclRules",
        "UniqueNm": "DeclRules",
        "Props": null,
        "Kids": [
          {
            "n": 7,
            "type": "parse.Rule",
            "name": "TypeDecl",
            "type": "parse.Rule",
            "name": "ConstDecl",
            "type": "parse.Rule",
            "name": "VarDecl",
            "type": "parse.Rule",
            "name": "ConstDeclN",
            "type": "parse.Rule",
            "name": "ConstList",
            "type": "parse.Rule",
            "name": "VarDeclN",
            "type": "parse.Rule",
            "name": "VarList"
          },
          {
            "Nm": "TypeDecl",
            "UniqueNm": "TypeDecl",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "'key:type' TypeDeclN 'EOS'",
            "StackMatch": "",
            "Ast": "AnchorAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "ConstDecl",
            "UniqueNm": "ConstDecl",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "'key:const' ConstDeclN 'EOS'",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "VarDecl",
            "UniqueNm": "VarDecl",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "'key:var' VarDeclN 'EOS'",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "ConstDeclN",
            "UniqueNm": "ConstDeclN",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "ConstGroup",
                "type": "parse.Rule",
                "name": "ConstOpts"
              },
              {
                "Nm": "ConstGroup",
                "UniqueNm": "ConstGroup",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'(' ConstList ')'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "ConstOpts",
                "UniqueNm": "ConstOpts",
                "Props": null,
                "Kids": [
                  {
                    "n": 2,
                    "type": "parse.Rule",
                    "name": "ConstSpec",
                    "type": "parse.Rule",
                    "name": "ConstSpecName"
                  },
                  {
                    "Nm": "ConstSpec",
                    "UniqueNm": "ConstSpec",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "NameList ?Type '=' Expr 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": -1,
                        "Act": "ChgToken",
                        "Path": "[0]",
                        "Tok": "NameConstant",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": -1,
                        "Act": "AddSymbol",
                        "Path": "[0]",
                        "Tok": "NameConstant",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": -1,
                        "Act": "AddDetail",
                        "Path": "[-1]",
                        "Tok": "None",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "ConstSpecName",
                    "UniqueNm": "ConstSpecName",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "only a name, no expression",
                    "Rule": "NameList 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": -1,
                        "Act": "ChgToken",
                        "Path": "[0]",
                        "Tok": "NameConstant",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": -1,
                        "Act": "AddSymbol",
                        "Path": "[0]",
                        "Tok": "NameConstant",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "different types of const expressions",
                "Rule": "",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "N = switch between 1 or group",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "ConstList",
            "UniqueNm": "ConstList",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "ConstOpts ?ConstList",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "VarDeclN",
            "UniqueNm": "VarDeclN",
            "Props": null,
            "Kids": [
              {
                "n": 2,
                "type": "parse.Rule",
                "name": "VarGroup",
                "type": "parse.Rule",
                "name": "VarOpts"
              },
              {
                "Nm": "VarGroup",
                "UniqueNm": "VarGroup",
                "Props": null,
                "Kids": null,
                "Off": false,
                "Desc": "",
                "Rule": "'(' VarList ')'",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              },
              {
                "Nm": "VarOpts",
                "UniqueNm": "VarOpts",
                "Props": null,
                "Kids": [
                  {
                    "n": 2,
                    "type": "parse.Rule",
                    "name": "VarSpecExpr",
                    "type": "parse.Rule",
                    "name": "VarSpec"
                  },
                  {
                    "Nm": "VarSpecExpr",
                    "UniqueNm": "VarSpecExpr",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "",
                    "Rule": "NameList ?Type '=' Expr 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": -1,
                        "Act": "ChgToken",
                        "Path": "[0]",
                        "Tok": "NameVarGlobal",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": -1,
                        "Act": "AddSymbol",
                        "Path": "[0]",
                        "Tok": "NameVarGlobal",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": -1,
                        "Act": "AddDetail",
                        "Path": "[-1]",
                        "Tok": "None",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  },
                  {
                    "Nm": "VarSpec",
                    "UniqueNm": "VarSpec",
                    "Props": null,
                    "Kids": null,
                    "Off": false,
                    "Desc": "only a name and type, no expression",
                    "Rule": "NameList Type 'EOS'",
                    "StackMatch": "",
                    "Ast": "AnchorAst",
                    "Acts": [
                      {
                        "RunIdx": -1,
                        "Act": "ChgToken",
                        "Path": "[0]",
                        "Tok": "NameVarGlobal",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": -1,
                        "Act": "AddSymbol",
                        "Path": "[0]",
                        "Tok": "NameVarGlobal",
                        "FmTok": "None"
                      },
                      {
                        "RunIdx": -1,
                        "Act": "AddDetail",
                        "Path": "[1]",
                        "Tok": "None",
                        "FmTok": "None"
                      }
                    ],
                    "OptTokMap": false,
                    "FirstTokMap": false
                  }
                ],
                "Off": false,
                "Desc": "different types of var expressions",
                "Rule": "",
                "StackMatch": "",
                "Ast": "NoAst",
                "Acts": null,
                "OptTokMap": false,
                "FirstTokMap": false
              }
            ],
            "Off": false,
            "Desc": "N = switch between 1 or group",
            "Rule": "",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          },
          {
            "Nm": "VarList",
            "UniqueNm": "VarList",
            "Props": null,
            "Kids": null,
            "Off": false,
            "Desc": "",
            "Rule": "VarOpts ?VarList",
            "StackMatch": "",
            "Ast": "NoAst",
            "Acts": null,
            "OptTokMap": false,
            "FirstTokMap": false
          }
        ],
        "Off": false,
        "Desc": "",
        "Rule": "",
        "StackMatch": "",
        "Ast": "NoAst",
        "Acts": null,
        "OptTokMap": false,
        "FirstTokMap": false
      }
    ],
    "Off": false,
    "Desc": "",
    "Rule": "",
    "StackMatch": "",
    "Ast": "NoAst",
    "Acts": null,
    "OptTokMap": false,
    "FirstTokMap": false
  },
  "Filename": "",
  "ReportErrs": false
}