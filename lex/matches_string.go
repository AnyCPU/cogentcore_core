// Code generated by "stringer -type=Matches"; DO NOT EDIT.

package lex

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _Matches_name = "StringLetterDigitWhiteSpaceCurStateAnyRuneMatchesN"

var _Matches_index = [...]uint8{0, 6, 12, 17, 27, 35, 42, 50}

func (i Matches) String() string {
	if i < 0 || i >= Matches(len(_Matches_index)-1) {
		return "Matches(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Matches_name[_Matches_index[i]:_Matches_index[i+1]]
}

func (i *Matches) FromString(s string) error {
	for j := 0; j < len(_Matches_index)-1; j++ {
		if s == _Matches_name[_Matches_index[j]:_Matches_index[j+1]] {
			*i = Matches(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Matches")
}
