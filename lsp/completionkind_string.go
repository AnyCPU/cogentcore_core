// Code generated by "stringer -type=CompletionKind"; DO NOT EDIT.

package lsp

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _CompletionKind_name = "CkNoneCkTextCkMethodCkFunctionCkConstructorCkFieldCkVariableCkClassCkInterfaceCkModuleCkPropertyCkUnitCkValueCkEnumCkKeywordCkSnippetColorCkFileCkReferenceCkFolderCkEnumMemberCkConstantCkStructCkEventCkOperatorCkTypeParameterCompletionKindN"

var _CompletionKind_index = [...]uint8{0, 6, 12, 20, 30, 43, 50, 60, 67, 78, 86, 96, 102, 109, 115, 124, 133, 138, 144, 155, 163, 175, 185, 193, 200, 210, 225, 240}

func (i CompletionKind) String() string {
	if i < 0 || i >= CompletionKind(len(_CompletionKind_index)-1) {
		return "CompletionKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CompletionKind_name[_CompletionKind_index[i]:_CompletionKind_index[i+1]]
}

func (i *CompletionKind) FromString(s string) error {
	for j := 0; j < len(_CompletionKind_index)-1; j++ {
		if s == _CompletionKind_name[_CompletionKind_index[j]:_CompletionKind_index[j+1]] {
			*i = CompletionKind(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: CompletionKind")
}
