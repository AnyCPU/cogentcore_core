// Code generated by "stringer -type=SymbolKind"; DO NOT EDIT.

package lsp

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _SymbolKind_name = "NoSymbolKindFileModuleNamespacePackageClassMethodPropertyFieldConstructorEnumInterfaceFunctionVariableConstantStringNumberBooleanArrayObjectKeyNullEnumMemberStructEventOperatorTypeParameterSymbolKindN"

var _SymbolKind_index = [...]uint8{0, 12, 16, 22, 31, 38, 43, 49, 57, 62, 73, 77, 86, 94, 102, 110, 116, 122, 129, 134, 140, 143, 147, 157, 163, 168, 176, 189, 200}

func (i SymbolKind) String() string {
	if i < 0 || i >= SymbolKind(len(_SymbolKind_index)-1) {
		return "SymbolKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SymbolKind_name[_SymbolKind_index[i]:_SymbolKind_index[i+1]]
}

func (i *SymbolKind) FromString(s string) error {
	for j := 0; j < len(_SymbolKind_index)-1; j++ {
		if s == _SymbolKind_name[_SymbolKind_index[j]:_SymbolKind_index[j+1]] {
			*i = SymbolKind(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: SymbolKind")
}
