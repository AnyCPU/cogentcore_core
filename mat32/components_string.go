// Code generated by "stringer -type=Components"; DO NOT EDIT.

package mat32

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _Components_name = "XYZWComponentsN"

var _Components_index = [...]uint8{0, 1, 2, 3, 4, 15}

func (i Components) String() string {
	if i < 0 || i >= Components(len(_Components_index)-1) {
		return "Components(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Components_name[_Components_index[i]:_Components_index[i+1]]
}

func (i *Components) FromString(s string) error {
	for j := 0; j < len(_Components_index)-1; j++ {
		if s == _Components_name[_Components_index[j]:_Components_index[j+1]] {
			*i = Components(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Components")
}
