// Code generated by "stringer -type=Platforms"; DO NOT EDIT.

package oswin

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MacOS-0]
	_ = x[LinuxX11-1]
	_ = x[Windows-2]
	_ = x[IOS-3]
	_ = x[Android-4]
	_ = x[PlatformsN-5]
}

const _Platforms_name = "MacOSLinuxX11WindowsIOSAndroidPlatformsN"

var _Platforms_index = [...]uint8{0, 5, 13, 20, 23, 30, 40}

func (i Platforms) String() string {
	if i < 0 || i >= Platforms(len(_Platforms_index)-1) {
		return "Platforms(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Platforms_name[_Platforms_index[i]:_Platforms_index[i+1]]
}

func (i *Platforms) FromString(s string) error {
	for j := 0; j < len(_Platforms_index)-1; j++ {
		if s == _Platforms_name[_Platforms_index[j]:_Platforms_index[j+1]] {
			*i = Platforms(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Platforms")
}
