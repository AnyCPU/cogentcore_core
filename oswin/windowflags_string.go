// Code generated by "stringer -type=WindowFlags"; DO NOT EDIT.

package oswin

import (
	"errors"
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Dialog-0]
	_ = x[Modal-1]
	_ = x[Tool-2]
	_ = x[Fullscreen-3]
	_ = x[Minimized-4]
	_ = x[Focus-5]
	_ = x[WindowFlagsN-6]
}

const _WindowFlags_name = "DialogModalToolFullscreenMinimizedFocusWindowFlagsN"

var _WindowFlags_index = [...]uint8{0, 6, 11, 15, 25, 34, 39, 51}

func (i WindowFlags) String() string {
	if i < 0 || i >= WindowFlags(len(_WindowFlags_index)-1) {
		return "WindowFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _WindowFlags_name[_WindowFlags_index[i]:_WindowFlags_index[i+1]]
}

func (i *WindowFlags) FromString(s string) error {
	for j := 0; j < len(_WindowFlags_index)-1; j++ {
		if s == _WindowFlags_name[_WindowFlags_index[j]:_WindowFlags_index[j+1]] {
			*i = WindowFlags(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: WindowFlags")
}

var _WindowFlags_descMap = map[WindowFlags]string{
	0: `Dialog indicates that this is a temporary, pop-up window.`,
	1: `Modal indicates that this dialog window blocks events going to other windows until it is closed.`,
	2: `Tool indicates that this is a floating tool window that has minimized window decoration.`,
	3: `Fullscreen indicates a window that occupies the entire screen.`,
	4: `Minimized indicates a window reduced to an icon, or otherwise no longer visible or active.  Otherwise, the window should be assumed to be visible.`,
	5: `Focus indicates that the window has the focus.`,
	6: ``,
}

func (i WindowFlags) Desc() string {
	if str, ok := _WindowFlags_descMap[i]; ok {
		return str
	}
	return "WindowFlags(" + strconv.FormatInt(int64(i), 10) + ")"
}
