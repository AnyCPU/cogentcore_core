// Code generated by "stringer -type=LangFlags"; DO NOT EDIT.

package pi

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NoFlags-0]
	_ = x[IndentSpace-1]
	_ = x[IndentTab-2]
	_ = x[ReAutoIndent-3]
	_ = x[LangFlagsN-4]
}

const _LangFlags_name = "NoFlagsIndentSpaceIndentTabReAutoIndentLangFlagsN"

var _LangFlags_index = [...]uint8{0, 7, 18, 27, 39, 49}

func (i LangFlags) String() string {
	if i < 0 || i >= LangFlags(len(_LangFlags_index)-1) {
		return "LangFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LangFlags_name[_LangFlags_index[i]:_LangFlags_index[i+1]]
}

func (i *LangFlags) FromString(s string) error {
	for j := 0; j < len(_LangFlags_index)-1; j++ {
		if s == _LangFlags_name[_LangFlags_index[j]:_LangFlags_index[j+1]] {
			*i = LangFlags(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: LangFlags")
}
