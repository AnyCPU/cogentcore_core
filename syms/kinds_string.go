// Code generated by "stringer -type=Kinds"; DO NOT EDIT.

package syms

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _Kinds_name = "UnknownPrimitiveNumericIntegerSignedIntInt8Int16Int32Int64UnsignedUintUint8Uint16Uint32Uint64UintptrPtrRefUnsafePtrFixedFixed26_6Fixed16_6Fixed0_32FloatFloat16Float32Float64ComplexComplex64Complex128BoolCompositeTupleRangeArrayListStringMatrixTensorMapSetFrozenSetStructClassObjectChanFunctionFuncMethodInterfaceKindsN"

var _Kinds_index = [...]uint16{0, 7, 16, 23, 30, 36, 39, 43, 48, 53, 58, 66, 70, 75, 81, 87, 93, 100, 103, 106, 115, 120, 129, 138, 147, 152, 159, 166, 173, 180, 189, 199, 203, 212, 217, 222, 227, 231, 237, 243, 249, 252, 255, 264, 270, 275, 281, 285, 293, 297, 303, 312, 318}

func (i Kinds) String() string {
	if i < 0 || i >= Kinds(len(_Kinds_index)-1) {
		return "Kinds(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kinds_name[_Kinds_index[i]:_Kinds_index[i+1]]
}

func (i *Kinds) FromString(s string) error {
	for j := 0; j < len(_Kinds_index)-1; j++ {
		if s == _Kinds_name[_Kinds_index[j]:_Kinds_index[j+1]] {
			*i = Kinds(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Kinds")
}
