// Code generated by "stringer -type=Tokens"; DO NOT EDIT.

package token

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _Tokens_name = "NoneErrorEOFEOLEOSBackgroundKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameBuiltinNameBuiltinPseudoNameOtherNamePseudoNameTypeNameClassNameStructNameFieldNameInterfaceNameConstantNameEnumNameEnumMemberNameArrayNameMapNameObjectNameTypeParamNameFunctionNameDecoratorNameFunctionMagicNameMethodNameOperatorNameConstructorNameExceptionNameLabelNameEventNameScopeNameNamespaceNameModuleNamePackageNameLibraryNameVarNameVarAnonymousNameVarClassNameVarGlobalNameVarInstanceNameVarMagicNameVarParamNameValueNameTagNamePropertyNameAttributeNameEntityLiteralLiteralDateLiteralOtherLiteralBoolLitStrLitStrAffixLitStrAtomLitStrBacktickLitStrBooleanLitStrCharLitStrDelimiterLitStrDocLitStrDoubleLitStrEscapeLitStrHeredocLitStrInterpolLitStrNameLitStrOtherLitStrRegexLitStrSingleLitStrSymbolLitStrFileLitNumLitNumBinLitNumFloatLitNumHexLitNumIntegerLitNumIntegerLongLitNumOctLitNumImagOperatorOperatorWordOpMathOpMathAddOpMathSubOpMathMulOpMathDivOpMathRemOpBitOpBitAndOpBitOrOpBitNotOpBitXorOpBitShiftLeftOpBitShiftRightOpBitAndNotOpAsgnOpAsgnAssignOpAsgnIncOpAsgnDecOpAsgnArrowOpAsgnDefineOpMathAsgnOpMathAsgnAddOpMathAsgnSubOpMathAsgnMulOpMathAsgnDivOpMathAsgnRemOpBitAsgnOpBitAsgnAndOpBitAsgnOrOpBitAsgnXorOpBitAsgnShiftLeftOpBitAsgnShiftRightOpBitAsgnAndNotOpLogOpLogAndOpLogOrOpLogNotOpRelOpRelEqualOpRelNotEqualOpRelLessOpRelGreaterOpRelLtEqOpRelGtEqOpListOpListEllipsisPunctuationPunctGpPunctGpLParenPunctGpRParenPunctGpLBrackPunctGpRBrackPunctGpLBracePunctGpRBracePunctSepPunctSepCommaPunctSepPeriodPunctSepSemicolonPunctSepColonPunctStrPunctStrDblQuotePunctStrQuotePunctStrBacktickPunctStrEscCommentCommentHashbangCommentMultilineCommentSingleCommentSpecialCommentPreprocCommentPreprocFileTextTextWhitespaceTextSymbolTextPunctuationTextSpellErrTextStyleTextStyleDeletedTextStyleEmphTextStyleErrorTextStyleHeadingTextStyleInsertedTextStyleOutputTextStylePromptTextStyleStrongTextStyleSubheadingTextStyleTracebackTextStyleUnderlineTextStyleLinkTokensN"

var _Tokens_index = [...]uint16{0, 4, 9, 12, 15, 18, 28, 35, 50, 68, 84, 97, 112, 123, 127, 138, 155, 164, 174, 182, 191, 201, 210, 223, 235, 243, 257, 266, 273, 283, 296, 308, 321, 338, 348, 360, 375, 388, 397, 406, 415, 428, 438, 449, 460, 467, 483, 495, 508, 523, 535, 547, 556, 563, 575, 588, 598, 605, 616, 628, 639, 645, 656, 666, 680, 693, 703, 718, 727, 739, 751, 764, 778, 788, 799, 810, 822, 834, 844, 850, 859, 870, 879, 892, 909, 918, 928, 936, 948, 954, 963, 972, 981, 990, 999, 1004, 1012, 1019, 1027, 1035, 1049, 1064, 1075, 1081, 1093, 1102, 1111, 1122, 1134, 1144, 1157, 1170, 1183, 1196, 1209, 1218, 1230, 1241, 1253, 1271, 1290, 1305, 1310, 1318, 1325, 1333, 1338, 1348, 1361, 1370, 1382, 1391, 1400, 1406, 1420, 1431, 1438, 1451, 1464, 1477, 1490, 1503, 1516, 1524, 1537, 1551, 1568, 1581, 1589, 1605, 1618, 1634, 1645, 1652, 1667, 1683, 1696, 1710, 1724, 1742, 1746, 1760, 1770, 1785, 1797, 1806, 1822, 1835, 1849, 1865, 1882, 1897, 1912, 1927, 1946, 1964, 1982, 1995, 2002}

func (i Tokens) String() string {
	if i < 0 || i >= Tokens(len(_Tokens_index)-1) {
		return "Tokens(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Tokens_name[_Tokens_index[i]:_Tokens_index[i+1]]
}

func (i *Tokens) FromString(s string) error {
	for j := 0; j < len(_Tokens_index)-1; j++ {
		if s == _Tokens_name[_Tokens_index[j]:_Tokens_index[j+1]] {
			*i = Tokens(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Tokens")
}
