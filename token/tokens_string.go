// Code generated by "stringer -type=Tokens"; DO NOT EDIT.

package token

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

const _Tokens_name = "NoneErrorEOFEOLEOSBackgroundKeywordKeywordConstantKeywordDeclarationKeywordNamespaceKeywordPseudoKeywordReservedKeywordTypeNameNameBuiltinNameBuiltinPseudoNameOtherNamePseudoNameTypeNameClassNameStructNameFieldNameInterfaceNameConstantNameEnumNameEnumMemberNameArrayNameMapNameObjectNameTypeParamNameFunctionNameDecoratorNameFunctionMagicNameMethodNameOperatorNameConstructorNameExceptionNameEventNameScopeNameNamespaceNameModuleNamePackageNameLabelNameVarNameVarAnonymousNameVarClassNameVarGlobalNameVarInstanceNameVarMagicNameVarParamNameValueNameTagNamePropertyNameAttributeNameEntityLiteralLiteralDateLiteralOtherLiteralBoolLitStrLitStrAffixLitStrAtomLitStrBacktickLitStrBooleanLitStrCharLitStrDelimiterLitStrDocLitStrDoubleLitStrEscapeLitStrHeredocLitStrInterpolLitStrNameLitStrOtherLitStrRegexLitStrSingleLitStrSymbolLitStrFileLitNumLitNumBinLitNumFloatLitNumHexLitNumIntegerLitNumIntegerLongLitNumOctLitNumImagOperatorOperatorWordOpMathOpMathAddOpMathSubOpMathMulOpMathDivOpMathRemOpBitOpBitAndOpBitOrOpBitNotOpBitXorOpBitShiftLeftOpBitShiftRightOpBitAndNotOpAsgnOpAsgnAssignOpAsgnIncOpAsgnDecOpAsgnArrowOpAsgnDefineOpMathAsgnOpMathAsgnAddOpMathAsgnSubOpMathAsgnMulOpMathAsgnDivOpMathAsgnRemOpBitAsgnOpBitAsgnAndOpBitAsgnOrOpBitAsgnXorOpBitAsgnShiftLeftOpBitAsgnShiftRightOpBitAsgnAndNotOpLogOpLogAndOpLogOrOpLogNotOpRelOpRelEqualOpRelNotEqualOpRelLessOpRelGreaterOpRelLtEqOpRelGtEqOpListOpListEllipsisPunctuationPunctGpPunctGpLParenPunctGpRParenPunctGpLBrackPunctGpRBrackPunctGpLBracePunctGpRBracePunctSepPunctSepCommaPunctSepPeriodPunctSepSemicolonPunctSepColonPunctStrPunctStrDblQuotePunctStrQuotePunctStrBacktickPunctStrEscCommentCommentHashbangCommentMultilineCommentSingleCommentSpecialCommentPreprocCommentPreprocFileTextTextWhitespaceTextSymbolTextPunctuationTextSpellErrTextStyleTextStyleDeletedTextStyleEmphTextStyleErrorTextStyleHeadingTextStyleInsertedTextStyleOutputTextStylePromptTextStyleStrongTextStyleSubheadingTextStyleTracebackTextStyleUnderlineTextStyleLinkTokensN"

var _Tokens_index = [...]uint16{0, 4, 9, 12, 15, 18, 28, 35, 50, 68, 84, 97, 112, 123, 127, 138, 155, 164, 174, 182, 191, 201, 210, 223, 235, 243, 257, 266, 273, 283, 296, 308, 321, 338, 348, 360, 375, 388, 397, 406, 419, 429, 440, 449, 456, 472, 484, 497, 512, 524, 536, 545, 552, 564, 577, 587, 594, 605, 617, 628, 634, 645, 655, 669, 682, 692, 707, 716, 728, 740, 753, 767, 777, 788, 799, 811, 823, 833, 839, 848, 859, 868, 881, 898, 907, 917, 925, 937, 943, 952, 961, 970, 979, 988, 993, 1001, 1008, 1016, 1024, 1038, 1053, 1064, 1070, 1082, 1091, 1100, 1111, 1123, 1133, 1146, 1159, 1172, 1185, 1198, 1207, 1219, 1230, 1242, 1260, 1279, 1294, 1299, 1307, 1314, 1322, 1327, 1337, 1350, 1359, 1371, 1380, 1389, 1395, 1409, 1420, 1427, 1440, 1453, 1466, 1479, 1492, 1505, 1513, 1526, 1540, 1557, 1570, 1578, 1594, 1607, 1623, 1634, 1641, 1656, 1672, 1685, 1699, 1713, 1731, 1735, 1749, 1759, 1774, 1786, 1795, 1811, 1824, 1838, 1854, 1871, 1886, 1901, 1916, 1935, 1953, 1971, 1984, 1991}

func (i Tokens) String() string {
	if i < 0 || i >= Tokens(len(_Tokens_index)-1) {
		return "Tokens(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Tokens_name[_Tokens_index[i]:_Tokens_index[i+1]]
}

func (i *Tokens) FromString(s string) error {
	for j := 0; j < len(_Tokens_index)-1; j++ {
		if s == _Tokens_name[_Tokens_index[j]:_Tokens_index[j+1]] {
			*i = Tokens(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Tokens")
}
