// Code generated by "goki generate ./..."; DO NOT EDIT.

package units

import (
	"goki.dev/gti"
	"goki.dev/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:      "goki.dev/girl/units.Value",
	ShortName: "units.Value",
	IDName:    "value",
	Doc:       "Value and units, and converted value into raw pixels (dots in DPI)",
	Directives: gti.Directives{
		&gti.Directive{Tool: "gti", Directive: "add", Args: []string{}},
	},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Val", &gti.Field{Name: "Val", Type: "float32", LocalType: "float32", Doc: "the value in terms of the specified unit", Directives: gti.Directives{}, Tag: "label:\"\""}},
		{"Un", &gti.Field{Name: "Un", Type: "goki.dev/girl/units.Units", LocalType: "Units", Doc: "the unit used for the value", Directives: gti.Directives{}, Tag: "label:\"\""}},
		{"Dots", &gti.Field{Name: "Dots", Type: "float32", LocalType: "float32", Doc: "the computed value in raw pixels (dots in DPI)", Directives: gti.Directives{}, Tag: "view:\"-\""}},
		{"Custom", &gti.Field{Name: "Custom", Type: "func(uc *goki.dev/girl/units.Context) float32", LocalType: "func(uc *Context) float32", Doc: "custom function that returns the dots of the value;\nif non-nil, it overrides all other fields;\nif nil, standard ToDots with the other fields is used", Directives: gti.Directives{}, Tag: "view:\"-\""}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
