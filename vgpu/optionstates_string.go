// Code generated by "stringer -type=OptionStates"; DO NOT EDIT.

package vgpu

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Disabled-0]
	_ = x[Optional-1]
	_ = x[Required-2]
	_ = x[Enabled-3]
	_ = x[OptionStatesN-4]
}

const _OptionStates_name = "DisabledOptionalRequiredEnabledOptionStatesN"

var _OptionStates_index = [...]uint8{0, 8, 16, 24, 31, 44}

func (i OptionStates) String() string {
	if i < 0 || i >= OptionStates(len(_OptionStates_index)-1) {
		return "OptionStates(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OptionStates_name[_OptionStates_index[i]:_OptionStates_index[i+1]]
}

func (i *OptionStates) FromString(s string) error {
	for j := 0; j < len(_OptionStates_index)-1; j++ {
		if s == _OptionStates_name[_OptionStates_index[j]:_OptionStates_index[j+1]] {
			*i = OptionStates(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: OptionStates")
}
