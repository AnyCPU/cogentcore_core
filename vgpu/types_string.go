// Code generated by "stringer -type=Types"; DO NOT EDIT.

package vgpu

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UndefType-0]
	_ = x[Bool32-1]
	_ = x[Int16-2]
	_ = x[Uint16-3]
	_ = x[Int32-4]
	_ = x[Int32Vec2-5]
	_ = x[Int32Vec4-6]
	_ = x[Uint32-7]
	_ = x[Uint32Vec2-8]
	_ = x[Uint32Vec4-9]
	_ = x[Float32-10]
	_ = x[Float32Vec2-11]
	_ = x[Float32Vec3-12]
	_ = x[Float32Vec4-13]
	_ = x[Float64-14]
	_ = x[Float64Vec2-15]
	_ = x[Float64Vec3-16]
	_ = x[Float64Vec4-17]
	_ = x[Float32Mat4-18]
	_ = x[Float32Mat3-19]
	_ = x[ImageRGBA32-20]
	_ = x[Depth32-21]
	_ = x[Depth24Sten8-22]
	_ = x[Struct-23]
	_ = x[TypesN-24]
}

const _Types_name = "UndefTypeBool32Int16Uint16Int32Int32Vec2Int32Vec4Uint32Uint32Vec2Uint32Vec4Float32Float32Vec2Float32Vec3Float32Vec4Float64Float64Vec2Float64Vec3Float64Vec4Float32Mat4Float32Mat3ImageRGBA32Depth32Depth24Sten8StructTypesN"

var _Types_index = [...]uint8{0, 9, 15, 20, 26, 31, 40, 49, 55, 65, 75, 82, 93, 104, 115, 122, 133, 144, 155, 166, 177, 188, 195, 207, 213, 219}

func (i Types) String() string {
	if i < 0 || i >= Types(len(_Types_index)-1) {
		return "Types(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Types_name[_Types_index[i]:_Types_index[i+1]]
}

func (i *Types) FromString(s string) error {
	for j := 0; j < len(_Types_index)-1; j++ {
		if s == _Types_name[_Types_index[j]:_Types_index[j+1]] {
			*i = Types(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: Types")
}
