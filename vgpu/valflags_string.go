// Code generated by "stringer -type=ValFlags"; DO NOT EDIT.

package vgpu

import (
	"errors"
	"strconv"
)

var _ = errors.New("dummy error")

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ValMod-0]
	_ = x[ValPaddedArray-1]
	_ = x[ValTextureOwns-2]
	_ = x[ValFlagsN-3]
}

const _ValFlags_name = "ValModValPaddedArrayValTextureOwnsValFlagsN"

var _ValFlags_index = [...]uint8{0, 6, 20, 34, 43}

func (i ValFlags) String() string {
	if i < 0 || i >= ValFlags(len(_ValFlags_index)-1) {
		return "ValFlags(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ValFlags_name[_ValFlags_index[i]:_ValFlags_index[i+1]]
}

func (i *ValFlags) FromString(s string) error {
	for j := 0; j < len(_ValFlags_index)-1; j++ {
		if s == _ValFlags_name[_ValFlags_index[j]:_ValFlags_index[j+1]] {
			*i = ValFlags(j)
			return nil
		}
	}
	return errors.New("String: " + s + " is not a valid option for type: ValFlags")
}
