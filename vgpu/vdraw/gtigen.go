// Code generated by "goki generate ./..."; DO NOT EDIT.

package vdraw

import (
	"goki.dev/goki/gti"
	"goki.dev/goki/ordmap"
)

var _ = gti.AddType(&gti.Type{
	Name:       "goki.dev/goki/vgpu/vdraw.Mtxs",
	ShortName:  "vdraw.Mtxs",
	IDName:     "mtxs",
	Doc:        "Mtxs are the projection matricies",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"MVP", &gti.Field{Name: "MVP", Type: "mat32.Mat4", Doc: "", Directives: gti.Directives{}}},
		{"UVP", &gti.Field{Name: "UVP", Type: "mat32.Mat4", Doc: "", Directives: gti.Directives{}}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "goki.dev/goki/vgpu/vdraw.DrawerImpl",
	ShortName:  "vdraw.DrawerImpl",
	IDName:     "drawer-impl",
	Doc:        "DrawerImpl contains implementation state -- ignore..",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"SurfIdx", &gti.Field{Name: "SurfIdx", Type: "uint32", Doc: "surface index for current render process", Directives: gti.Directives{}}},
		{"MaxTextures", &gti.Field{Name: "MaxTextures", Type: "int", Doc: "maximum number of images per pass -- set by user at config", Directives: gti.Directives{}}},
		{"FlipY", &gti.Field{Name: "FlipY", Type: "bool", Doc: "whether to render image with flipped Y", Directives: gti.Directives{}}},
		{"LastOp", &gti.Field{Name: "LastOp", Type: "draw.Op", Doc: "last draw operation used -- used for switching pipeline", Directives: gti.Directives{}}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})

var _ = gti.AddType(&gti.Type{
	Name:       "goki.dev/goki/vgpu/vdraw.Drawer",
	ShortName:  "vdraw.Drawer",
	IDName:     "drawer",
	Doc:        "Drawer is the vDraw implementation, which draws Textures\nor Fills solid colors to a render target (Surface, RenderFrame).\nImage and color palette must be set prior to a given render pass.\nMultiple fill operations can be performed in one pass, but only\none Image can be used at a time.",
	Directives: gti.Directives{},
	Fields: ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{
		{"Sys", &gti.Field{Name: "Sys", Type: "vgpu.System", Doc: "drawing system", Directives: gti.Directives{}}},
		{"Surf", &gti.Field{Name: "Surf", Type: "*vgpu.Surface", Doc: "surface if render target", Directives: gti.Directives{}}},
		{"Frame", &gti.Field{Name: "Frame", Type: "*vgpu.RenderFrame", Doc: "render frame if render target", Directives: gti.Directives{}}},
		{"YIsDown", &gti.Field{Name: "YIsDown", Type: "bool", Doc: "render so the Y axis points down, with 0,0 at the upper left, which is the Vulkan standard.  default is Y is up, with 0,0 at bottom left, which is OpenGL default.  this must be set prior to configuring, the surface, as it determines the rendering parameters.", Directives: gti.Directives{}}},
		{"Impl", &gti.Field{Name: "Impl", Type: "DrawerImpl", Doc: "implementation state -- ignore", Directives: gti.Directives{}}},
		{"UpdtMu", &gti.Field{Name: "UpdtMu", Type: "sync.Mutex", Doc: "mutex on updating", Directives: gti.Directives{}}},
	}),
	Embeds:  ordmap.Make([]ordmap.KeyVal[string, *gti.Field]{}),
	Methods: ordmap.Make([]ordmap.KeyVal[string, *gti.Method]{}),
})
