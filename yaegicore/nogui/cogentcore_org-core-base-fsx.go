// Code generated by 'yaegi extract cogentcore.org/core/base/fsx'. DO NOT EDIT.

package nogui

import (
	"cogentcore.org/core/base/fsx"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/base/fsx/fsx"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DirAndFile":       reflect.ValueOf(fsx.DirAndFile),
		"DirFS":            reflect.ValueOf(fsx.DirFS),
		"Dirs":             reflect.ValueOf(fsx.Dirs),
		"ExtSplit":         reflect.ValueOf(fsx.ExtSplit),
		"FileExists":       reflect.ValueOf(fsx.FileExists),
		"FileExistsFS":     reflect.ValueOf(fsx.FileExistsFS),
		"Filenames":        reflect.ValueOf(fsx.Filenames),
		"Files":            reflect.ValueOf(fsx.Files),
		"FindFilesOnPaths": reflect.ValueOf(fsx.FindFilesOnPaths),
		"GoSrcDir":         reflect.ValueOf(fsx.GoSrcDir),
		"HasFile":          reflect.ValueOf(fsx.HasFile),
		"LatestMod":        reflect.ValueOf(fsx.LatestMod),
		"RelativeFilePath": reflect.ValueOf(fsx.RelativeFilePath),
		"SplitRootPathFS":  reflect.ValueOf(fsx.SplitRootPathFS),
		"Sub":              reflect.ValueOf(fsx.Sub),

		// type definitions
		"Filename": reflect.ValueOf((*fsx.Filename)(nil)),
	}
}
