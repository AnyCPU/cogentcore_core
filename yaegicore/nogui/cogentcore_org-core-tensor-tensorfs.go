// Code generated by 'yaegi extract cogentcore.org/core/tensor/tensorfs'. DO NOT EDIT.

package nogui

import (
	"cogentcore.org/core/tensor/tensorfs"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/tensor/tensorfs/tensorfs"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Chdir":     reflect.ValueOf(tensorfs.Chdir),
		"CurDir":    reflect.ValueOf(&tensorfs.CurDir).Elem(),
		"CurRoot":   reflect.ValueOf(&tensorfs.CurRoot).Elem(),
		"DirOnly":   reflect.ValueOf(tensorfs.DirOnly),
		"Get":       reflect.ValueOf(tensorfs.Get),
		"List":      reflect.ValueOf(tensorfs.List),
		"Long":      reflect.ValueOf(tensorfs.Long),
		"Mkdir":     reflect.ValueOf(tensorfs.Mkdir),
		"NewDir":    reflect.ValueOf(tensorfs.NewDir),
		"Overwrite": reflect.ValueOf(tensorfs.Overwrite),
		"Preserve":  reflect.ValueOf(tensorfs.Preserve),
		"Record":    reflect.ValueOf(tensorfs.Record),
		"Recursive": reflect.ValueOf(tensorfs.Recursive),
		"Set":       reflect.ValueOf(tensorfs.Set),
		"Short":     reflect.ValueOf(tensorfs.Short),

		// type definitions
		"Data":    reflect.ValueOf((*tensorfs.Data)(nil)),
		"DirFile": reflect.ValueOf((*tensorfs.DirFile)(nil)),
		"File":    reflect.ValueOf((*tensorfs.File)(nil)),
	}
}
