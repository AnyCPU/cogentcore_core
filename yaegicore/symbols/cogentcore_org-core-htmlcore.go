// Code generated by 'yaegi extract cogentcore.org/core/htmlcore'. DO NOT EDIT.

package symbols

import (
	"cogentcore.org/core/htmlcore"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/htmlcore/htmlcore"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BindTextEditor":   reflect.ValueOf(&htmlcore.BindTextEditor).Elem(),
		"ElementHandlers":  reflect.ValueOf(&htmlcore.ElementHandlers).Elem(),
		"ExtractText":      reflect.ValueOf(htmlcore.ExtractText),
		"Get":              reflect.ValueOf(htmlcore.Get),
		"IsURL":            reflect.ValueOf(htmlcore.IsURL),
		"NewContext":       reflect.ValueOf(htmlcore.NewContext),
		"NormalizeURL":     reflect.ValueOf(htmlcore.NormalizeURL),
		"ParseRelativeURL": reflect.ValueOf(htmlcore.ParseRelativeURL),
		"ParseURL":         reflect.ValueOf(htmlcore.ParseURL),
		"PkgGoDevWikilink": reflect.ValueOf(htmlcore.PkgGoDevWikilink),
		"ReadHTML":         reflect.ValueOf(htmlcore.ReadHTML),
		"ReadHTMLString":   reflect.ValueOf(htmlcore.ReadHTMLString),
		"ReadMD":           reflect.ValueOf(htmlcore.ReadMD),
		"ReadMDString":     reflect.ValueOf(htmlcore.ReadMDString),

		// type definitions
		"Context": reflect.ValueOf((*htmlcore.Context)(nil)),
	}
}
